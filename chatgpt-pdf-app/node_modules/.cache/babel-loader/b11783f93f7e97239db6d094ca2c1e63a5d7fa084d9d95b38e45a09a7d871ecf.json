{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Aniket\\\\Desktop\\\\MS\\\\NCSU\\\\Subjects\\\\Infinitus\\\\chatgpt-pdf-app\\\\src\\\\components\\\\ChatApplication.js\",\n  _s = $RefreshSig$();\n// src/components/ChatApplication.js\nimport React, { useState, useEffect, useRef } from 'react';\nimport axios from 'axios';\nimport NavBar from './NavBar';\nimport PdfUploader from './PdfUploader';\nimport { Worker, Viewer } from '@react-pdf-viewer/core';\nimport '@react-pdf-viewer/core/lib/styles/index.css';\nimport '@react-pdf-viewer/default-layout/lib/styles/index.css';\nimport './ChatApplication.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction ChatApplication() {\n  _s();\n  const [sessionId, setSessionId] = useState('');\n  const [chatHistory, setChatHistory] = useState([]);\n  const [inputMessage, setInputMessage] = useState('');\n  const [isLoading, setIsLoading] = useState(false);\n  const [pdfFile, setPdfFile] = useState(null);\n  const messagesEndRef = useRef(null);\n  useEffect(() => {\n    if (!sessionId) {\n      const getSession = async () => {\n        const response = await axios.get('http://localhost:5000/get_session');\n        setSessionId(response.data.session_id);\n      };\n      getSession();\n    }\n  }, [sessionId]);\n  useEffect(() => {\n    var _messagesEndRef$curre;\n    (_messagesEndRef$curre = messagesEndRef.current) === null || _messagesEndRef$curre === void 0 ? void 0 : _messagesEndRef$curre.scrollIntoView({\n      behavior: \"smooth\"\n    });\n  }, [chatHistory]);\n  const handleSendMessage = async event => {\n    event.preventDefault();\n    if (inputMessage.trim()) {\n      setIsLoading(true);\n      setChatHistory([...chatHistory, {\n        role: 'user',\n        content: inputMessage\n      }]);\n      try {\n        const response = await axios.post('http://localhost:5000/ask_question', {\n          session_id: sessionId,\n          question: inputMessage\n        });\n        setChatHistory(currentHistory => [...currentHistory, {\n          role: 'assistant',\n          content: response.data.answer\n        }]);\n      } catch (error) {\n        console.error('Error sending message:', error);\n        setChatHistory(currentHistory => [...currentHistory, {\n          role: 'assistant',\n          content: \"Failed to get response.\"\n        }]);\n      }\n      setInputMessage('');\n      setIsLoading(false);\n    }\n  };\n  const clearChatHistory = () => {\n    setChatHistory([]);\n  };\n  const handlePdfUpload = file => {\n    setPdfFile(URL.createObjectURL(file)); // Create a URL for the uploaded file\n    setSessionId(null); // Reset the session ID if needed\n    clearChatHistory(); // Clear the chat history\n  };\n  const handleFileSelected = event => {\n    const file = event.target.files[0];\n    if (file) {\n      // Set file for PDF viewer\n      setPdfFile(URL.createObjectURL(file));\n      // Call upload function if needed or handle the file upload here\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app-container\",\n    children: [/*#__PURE__*/_jsxDEV(NavBar, {\n      onFileSelect: handleFileSelected\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: pdfFile ? \"split-container\" : \"chat-fullscreen\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chat-container\",\n        children: [/*#__PURE__*/_jsxDEV(PdfUploader, {\n          setSessionId: setSessionId,\n          onUploadSuccess: clearChatHistory\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"chat-history\",\n          children: [chatHistory.map((msg, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: `message ${msg.role}`,\n            children: msg.content\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 25\n          }, this)), isLoading && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"message system\",\n            children: \"Generating Response...\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 35\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            ref: messagesEndRef\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 21\n          }, this), \" \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n          className: \"input-group\",\n          onSubmit: handleSendMessage,\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            value: inputMessage,\n            onChange: e => setInputMessage(e.target.value),\n            onKeyDown: e => e.key === 'Enter' && handleSendMessage(e),\n            placeholder: \"Type your message and press Enter\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 93,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"submit\",\n            className: \"send-button\",\n            children: \"\\u2B06 \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 100,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 13\n      }, this), pdfFile && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"pdf-container\",\n        children: /*#__PURE__*/_jsxDEV(Worker, {\n          children: /*#__PURE__*/_jsxDEV(Viewer, {\n            fileUrl: pdfFile\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 108,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 73,\n    columnNumber: 9\n  }, this);\n}\n_s(ChatApplication, \"zKP4UBu/M/NDKlpsvZzj75xx93c=\");\n_c = ChatApplication;\nexport default ChatApplication;\nvar _c;\n$RefreshReg$(_c, \"ChatApplication\");","map":{"version":3,"names":["React","useState","useEffect","useRef","axios","NavBar","PdfUploader","Worker","Viewer","jsxDEV","_jsxDEV","ChatApplication","_s","sessionId","setSessionId","chatHistory","setChatHistory","inputMessage","setInputMessage","isLoading","setIsLoading","pdfFile","setPdfFile","messagesEndRef","getSession","response","get","data","session_id","_messagesEndRef$curre","current","scrollIntoView","behavior","handleSendMessage","event","preventDefault","trim","role","content","post","question","currentHistory","answer","error","console","clearChatHistory","handlePdfUpload","file","URL","createObjectURL","handleFileSelected","target","files","className","children","onFileSelect","fileName","_jsxFileName","lineNumber","columnNumber","onUploadSuccess","map","msg","index","ref","onSubmit","type","value","onChange","e","onKeyDown","key","placeholder","fileUrl","_c","$RefreshReg$"],"sources":["C:/Users/Aniket/Desktop/MS/NCSU/Subjects/Infinitus/chatgpt-pdf-app/src/components/ChatApplication.js"],"sourcesContent":["// src/components/ChatApplication.js\r\nimport React, { useState, useEffect, useRef } from 'react';\r\nimport axios from 'axios';\r\nimport NavBar from './NavBar';\r\nimport PdfUploader from './PdfUploader';\r\nimport { Worker, Viewer } from '@react-pdf-viewer/core';\r\nimport '@react-pdf-viewer/core/lib/styles/index.css';\r\nimport '@react-pdf-viewer/default-layout/lib/styles/index.css';\r\nimport './ChatApplication.css';\r\n\r\nfunction ChatApplication() {\r\n    const [sessionId, setSessionId] = useState('');\r\n    const [chatHistory, setChatHistory] = useState([]);\r\n    const [inputMessage, setInputMessage] = useState('');\r\n    const [isLoading, setIsLoading] = useState(false);\r\n    const [pdfFile, setPdfFile] = useState(null);\r\n    const messagesEndRef = useRef(null);\r\n\r\n    useEffect(() => {\r\n        if (!sessionId) {\r\n            const getSession = async () => {\r\n                const response = await axios.get('http://localhost:5000/get_session');\r\n                setSessionId(response.data.session_id);\r\n            };\r\n            getSession();\r\n        }\r\n    }, [sessionId]);\r\n\r\n    useEffect(() => {\r\n        messagesEndRef.current?.scrollIntoView({ behavior: \"smooth\" });\r\n    }, [chatHistory]);\r\n\r\n    const handleSendMessage = async (event) => {\r\n        event.preventDefault();\r\n        if (inputMessage.trim()) {\r\n            setIsLoading(true);\r\n            setChatHistory([...chatHistory, { role: 'user', content: inputMessage }]);\r\n            try {\r\n                const response = await axios.post('http://localhost:5000/ask_question', {\r\n                    session_id: sessionId,\r\n                    question: inputMessage,\r\n                });\r\n                setChatHistory(currentHistory => [...currentHistory, { role: 'assistant', content: response.data.answer }]);\r\n            } catch (error) {\r\n                console.error('Error sending message:', error);\r\n                setChatHistory(currentHistory => [...currentHistory, { role: 'assistant', content: \"Failed to get response.\" }]);\r\n            }\r\n            setInputMessage('');\r\n            setIsLoading(false);\r\n        }\r\n    };\r\n\r\n    const clearChatHistory = () => {\r\n        setChatHistory([]);\r\n    };\r\n\r\n    const handlePdfUpload = (file) => {\r\n        setPdfFile(URL.createObjectURL(file)); // Create a URL for the uploaded file\r\n        setSessionId(null); // Reset the session ID if needed\r\n        clearChatHistory(); // Clear the chat history\r\n    };\r\n\r\n    const handleFileSelected = (event) => {\r\n        const file = event.target.files[0];\r\n        if (file) {\r\n          // Set file for PDF viewer\r\n          setPdfFile(URL.createObjectURL(file));\r\n          // Call upload function if needed or handle the file upload here\r\n        }\r\n      };\r\n\r\n    return (\r\n        <div className=\"app-container\">\r\n        {/* <NavBar setSessionId={setSessionId} handlePdfUpload={handlePdfUpload} /> */}\r\n        <NavBar onFileSelect={handleFileSelected} />\r\n        <div className={pdfFile ? \"split-container\" : \"chat-fullscreen\"}>\r\n            \r\n  \r\n            <div className=\"chat-container\">\r\n                <PdfUploader setSessionId={setSessionId} onUploadSuccess={clearChatHistory} />\r\n                <div className=\"chat-history\">\r\n                    {chatHistory.map((msg, index) => (\r\n                        <div key={index} className={`message ${msg.role}`}>\r\n                            {msg.content}\r\n                        </div>\r\n                    ))}\r\n                    {isLoading && <div className=\"message system\">Generating Response...</div>}\r\n                    <div ref={messagesEndRef} /> {/* Empty div for auto-scrolling */}\r\n                </div>\r\n                {/* <PdfUploader setSessionId={setSessionId} onUploadSuccess={handlePdfUpload} /> */}\r\n\r\n                <form className=\"input-group\" onSubmit={handleSendMessage}>\r\n                    <input\r\n                        type=\"text\"\r\n                        value={inputMessage}\r\n                        onChange={(e) => setInputMessage(e.target.value)}\r\n                        onKeyDown={(e) => e.key === 'Enter' && handleSendMessage(e)}\r\n                        placeholder=\"Type your message and press Enter\"\r\n                    />\r\n                    <button type=\"submit\" className=\"send-button\">\r\n                        &#x2B06; {/* Unicode character for upward arrow */}\r\n                    </button>\r\n                </form>\r\n            </div>\r\n            {pdfFile && (\r\n          <div className=\"pdf-container\">\r\n            <Worker>\r\n              <Viewer fileUrl={pdfFile} />\r\n            </Worker>\r\n          </div>\r\n        )}\r\n      </div>\r\n    </div>\r\n    );\r\n}\r\n\r\nexport default ChatApplication;\r\n"],"mappings":";;AAAA;AACA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,EAAEC,MAAM,QAAQ,OAAO;AAC1D,OAAOC,KAAK,MAAM,OAAO;AACzB,OAAOC,MAAM,MAAM,UAAU;AAC7B,OAAOC,WAAW,MAAM,eAAe;AACvC,SAASC,MAAM,EAAEC,MAAM,QAAQ,wBAAwB;AACvD,OAAO,6CAA6C;AACpD,OAAO,uDAAuD;AAC9D,OAAO,uBAAuB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE/B,SAASC,eAAeA,CAAA,EAAG;EAAAC,EAAA;EACvB,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGb,QAAQ,CAAC,EAAE,CAAC;EAC9C,MAAM,CAACc,WAAW,EAAEC,cAAc,CAAC,GAAGf,QAAQ,CAAC,EAAE,CAAC;EAClD,MAAM,CAACgB,YAAY,EAAEC,eAAe,CAAC,GAAGjB,QAAQ,CAAC,EAAE,CAAC;EACpD,MAAM,CAACkB,SAAS,EAAEC,YAAY,CAAC,GAAGnB,QAAQ,CAAC,KAAK,CAAC;EACjD,MAAM,CAACoB,OAAO,EAAEC,UAAU,CAAC,GAAGrB,QAAQ,CAAC,IAAI,CAAC;EAC5C,MAAMsB,cAAc,GAAGpB,MAAM,CAAC,IAAI,CAAC;EAEnCD,SAAS,CAAC,MAAM;IACZ,IAAI,CAACW,SAAS,EAAE;MACZ,MAAMW,UAAU,GAAG,MAAAA,CAAA,KAAY;QAC3B,MAAMC,QAAQ,GAAG,MAAMrB,KAAK,CAACsB,GAAG,CAAC,mCAAmC,CAAC;QACrEZ,YAAY,CAACW,QAAQ,CAACE,IAAI,CAACC,UAAU,CAAC;MAC1C,CAAC;MACDJ,UAAU,CAAC,CAAC;IAChB;EACJ,CAAC,EAAE,CAACX,SAAS,CAAC,CAAC;EAEfX,SAAS,CAAC,MAAM;IAAA,IAAA2B,qBAAA;IACZ,CAAAA,qBAAA,GAAAN,cAAc,CAACO,OAAO,cAAAD,qBAAA,uBAAtBA,qBAAA,CAAwBE,cAAc,CAAC;MAAEC,QAAQ,EAAE;IAAS,CAAC,CAAC;EAClE,CAAC,EAAE,CAACjB,WAAW,CAAC,CAAC;EAEjB,MAAMkB,iBAAiB,GAAG,MAAOC,KAAK,IAAK;IACvCA,KAAK,CAACC,cAAc,CAAC,CAAC;IACtB,IAAIlB,YAAY,CAACmB,IAAI,CAAC,CAAC,EAAE;MACrBhB,YAAY,CAAC,IAAI,CAAC;MAClBJ,cAAc,CAAC,CAAC,GAAGD,WAAW,EAAE;QAAEsB,IAAI,EAAE,MAAM;QAAEC,OAAO,EAAErB;MAAa,CAAC,CAAC,CAAC;MACzE,IAAI;QACA,MAAMQ,QAAQ,GAAG,MAAMrB,KAAK,CAACmC,IAAI,CAAC,oCAAoC,EAAE;UACpEX,UAAU,EAAEf,SAAS;UACrB2B,QAAQ,EAAEvB;QACd,CAAC,CAAC;QACFD,cAAc,CAACyB,cAAc,IAAI,CAAC,GAAGA,cAAc,EAAE;UAAEJ,IAAI,EAAE,WAAW;UAAEC,OAAO,EAAEb,QAAQ,CAACE,IAAI,CAACe;QAAO,CAAC,CAAC,CAAC;MAC/G,CAAC,CAAC,OAAOC,KAAK,EAAE;QACZC,OAAO,CAACD,KAAK,CAAC,wBAAwB,EAAEA,KAAK,CAAC;QAC9C3B,cAAc,CAACyB,cAAc,IAAI,CAAC,GAAGA,cAAc,EAAE;UAAEJ,IAAI,EAAE,WAAW;UAAEC,OAAO,EAAE;QAA0B,CAAC,CAAC,CAAC;MACpH;MACApB,eAAe,CAAC,EAAE,CAAC;MACnBE,YAAY,CAAC,KAAK,CAAC;IACvB;EACJ,CAAC;EAED,MAAMyB,gBAAgB,GAAGA,CAAA,KAAM;IAC3B7B,cAAc,CAAC,EAAE,CAAC;EACtB,CAAC;EAED,MAAM8B,eAAe,GAAIC,IAAI,IAAK;IAC9BzB,UAAU,CAAC0B,GAAG,CAACC,eAAe,CAACF,IAAI,CAAC,CAAC,CAAC,CAAC;IACvCjC,YAAY,CAAC,IAAI,CAAC,CAAC,CAAC;IACpB+B,gBAAgB,CAAC,CAAC,CAAC,CAAC;EACxB,CAAC;EAED,MAAMK,kBAAkB,GAAIhB,KAAK,IAAK;IAClC,MAAMa,IAAI,GAAGb,KAAK,CAACiB,MAAM,CAACC,KAAK,CAAC,CAAC,CAAC;IAClC,IAAIL,IAAI,EAAE;MACR;MACAzB,UAAU,CAAC0B,GAAG,CAACC,eAAe,CAACF,IAAI,CAAC,CAAC;MACrC;IACF;EACF,CAAC;EAEH,oBACIrC,OAAA;IAAK2C,SAAS,EAAC,eAAe;IAAAC,QAAA,gBAE9B5C,OAAA,CAACL,MAAM;MAACkD,YAAY,EAAEL;IAAmB;MAAAM,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eAC5CjD,OAAA;MAAK2C,SAAS,EAAEhC,OAAO,GAAG,iBAAiB,GAAG,iBAAkB;MAAAiC,QAAA,gBAG5D5C,OAAA;QAAK2C,SAAS,EAAC,gBAAgB;QAAAC,QAAA,gBAC3B5C,OAAA,CAACJ,WAAW;UAACQ,YAAY,EAAEA,YAAa;UAAC8C,eAAe,EAAEf;QAAiB;UAAAW,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC,eAC9EjD,OAAA;UAAK2C,SAAS,EAAC,cAAc;UAAAC,QAAA,GACxBvC,WAAW,CAAC8C,GAAG,CAAC,CAACC,GAAG,EAAEC,KAAK,kBACxBrD,OAAA;YAAiB2C,SAAS,EAAG,WAAUS,GAAG,CAACzB,IAAK,EAAE;YAAAiB,QAAA,EAC7CQ,GAAG,CAACxB;UAAO,GADNyB,KAAK;YAAAP,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAEV,CACR,CAAC,EACDxC,SAAS,iBAAIT,OAAA;YAAK2C,SAAS,EAAC,gBAAgB;YAAAC,QAAA,EAAC;UAAsB;YAAAE,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAK,CAAC,eAC1EjD,OAAA;YAAKsD,GAAG,EAAEzC;UAAe;YAAAiC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE,CAAC,KAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAC5B,CAAC,eAGNjD,OAAA;UAAM2C,SAAS,EAAC,aAAa;UAACY,QAAQ,EAAEhC,iBAAkB;UAAAqB,QAAA,gBACtD5C,OAAA;YACIwD,IAAI,EAAC,MAAM;YACXC,KAAK,EAAElD,YAAa;YACpBmD,QAAQ,EAAGC,CAAC,IAAKnD,eAAe,CAACmD,CAAC,CAAClB,MAAM,CAACgB,KAAK,CAAE;YACjDG,SAAS,EAAGD,CAAC,IAAKA,CAAC,CAACE,GAAG,KAAK,OAAO,IAAItC,iBAAiB,CAACoC,CAAC,CAAE;YAC5DG,WAAW,EAAC;UAAmC;YAAAhB,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAClD,CAAC,eACFjD,OAAA;YAAQwD,IAAI,EAAC,QAAQ;YAACb,SAAS,EAAC,aAAa;YAAAC,QAAA,EAAC;UACjC;YAAAE,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACL,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACP,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACN,CAAC,EACLtC,OAAO,iBACVX,OAAA;QAAK2C,SAAS,EAAC,eAAe;QAAAC,QAAA,eAC5B5C,OAAA,CAACH,MAAM;UAAA+C,QAAA,eACL5C,OAAA,CAACF,MAAM;YAACiE,OAAO,EAAEpD;UAAQ;YAAAmC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACtB;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACN,CACN;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV;AAAC/C,EAAA,CAxGQD,eAAe;AAAA+D,EAAA,GAAf/D,eAAe;AA0GxB,eAAeA,eAAe;AAAC,IAAA+D,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}