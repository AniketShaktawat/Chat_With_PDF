{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Aniket\\\\Desktop\\\\MS\\\\NCSU\\\\Subjects\\\\Infinitus\\\\chatgpt-pdf-app\\\\src\\\\components\\\\ChatApplication.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { Document, Page } from 'react-pdf';\nimport QuestionAsker from './QuestionAsker';\nimport ChatHistory from './ChatHistory';\nimport styled from 'styled-components';\n\n// PDF document style\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst PDFViewer = styled.div`\n  width: 50%;\n  height: calc(100vh - 40px); // Adjust height as needed\n  overflow-y: auto;\n  padding: 20px;\n  box-sizing: border-box;\n`;\n\n// Chat panel style\n_c = PDFViewer;\nconst ChatPanel = styled.div`\n  width: 50%;\n  display: flex;\n  flex-direction: column;\n  height: calc(100vh - 40px); // Adjust height as needed\n  box-sizing: border-box;\n`;\n\n// Main container style\n_c2 = ChatPanel;\nconst Container = styled.div`\n  display: flex;\n  padding: 20px;\n  height: 100vh;\n  box-sizing: border-box;\n  background-color: #f8f9fa; // Use your preferred background color\n`;\n\n// ChatApplication component\n_c3 = Container;\nfunction ChatApplication() {\n  _s();\n  const [sessionId, setSessionId] = useState('');\n  const [messages, setMessages] = useState([]);\n  const [numPages, setNumPages] = useState(null);\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const response = await axios.get('http://localhost:5000/get_session');\n        setSessionId(response.data.session_id);\n      } catch (error) {\n        console.error(\"Failed to fetch session ID:\", error);\n      }\n    };\n    fetchData();\n  }, []);\n  const addMessage = (role, content) => {\n    setMessages(prevMessages => [...prevMessages, {\n      role,\n      content\n    }]);\n  };\n  const onDocumentLoadSuccess = ({\n    numPages\n  }) => {\n    setNumPages(numPages);\n  };\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: [/*#__PURE__*/_jsxDEV(PDFViewer, {\n      children: /*#__PURE__*/_jsxDEV(Document, {\n        file: \"/path/to/StartupPlaybook.pdf\" // The URL or path to the PDF file\n        ,\n        onLoadSuccess: onDocumentLoadSuccess,\n        children: [/*#__PURE__*/_jsxDEV(Page, {\n          pageNumber: 1\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 21\n        }, this), \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(ChatPanel, {\n      children: [/*#__PURE__*/_jsxDEV(ChatHistory, {\n        messages: messages\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(QuestionAsker, {\n        sessionId: sessionId,\n        addMessage: addMessage\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 63,\n    columnNumber: 9\n  }, this);\n}\n_s(ChatApplication, \"1QBgdrh2QpAVArQ3zLJGxHnwkpM=\");\n_c4 = ChatApplication;\nexport default ChatApplication;\nvar _c, _c2, _c3, _c4;\n$RefreshReg$(_c, \"PDFViewer\");\n$RefreshReg$(_c2, \"ChatPanel\");\n$RefreshReg$(_c3, \"Container\");\n$RefreshReg$(_c4, \"ChatApplication\");","map":{"version":3,"names":["React","useState","useEffect","axios","Document","Page","QuestionAsker","ChatHistory","styled","jsxDEV","_jsxDEV","PDFViewer","div","_c","ChatPanel","_c2","Container","_c3","ChatApplication","_s","sessionId","setSessionId","messages","setMessages","numPages","setNumPages","fetchData","response","get","data","session_id","error","console","addMessage","role","content","prevMessages","onDocumentLoadSuccess","children","file","onLoadSuccess","pageNumber","fileName","_jsxFileName","lineNumber","columnNumber","_c4","$RefreshReg$"],"sources":["C:/Users/Aniket/Desktop/MS/NCSU/Subjects/Infinitus/chatgpt-pdf-app/src/components/ChatApplication.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport { Document, Page } from 'react-pdf';\r\nimport QuestionAsker from './QuestionAsker';\r\nimport ChatHistory from './ChatHistory';\r\nimport styled from 'styled-components';\r\n\r\n// PDF document style\r\nconst PDFViewer = styled.div`\r\n  width: 50%;\r\n  height: calc(100vh - 40px); // Adjust height as needed\r\n  overflow-y: auto;\r\n  padding: 20px;\r\n  box-sizing: border-box;\r\n`;\r\n\r\n// Chat panel style\r\nconst ChatPanel = styled.div`\r\n  width: 50%;\r\n  display: flex;\r\n  flex-direction: column;\r\n  height: calc(100vh - 40px); // Adjust height as needed\r\n  box-sizing: border-box;\r\n`;\r\n\r\n// Main container style\r\nconst Container = styled.div`\r\n  display: flex;\r\n  padding: 20px;\r\n  height: 100vh;\r\n  box-sizing: border-box;\r\n  background-color: #f8f9fa; // Use your preferred background color\r\n`;\r\n\r\n// ChatApplication component\r\nfunction ChatApplication() {\r\n    const [sessionId, setSessionId] = useState('');\r\n    const [messages, setMessages] = useState([]);\r\n    const [numPages, setNumPages] = useState(null);\r\n\r\n    useEffect(() => {\r\n        const fetchData = async () => {\r\n            try {\r\n                const response = await axios.get('http://localhost:5000/get_session');\r\n                setSessionId(response.data.session_id);\r\n            } catch (error) {\r\n                console.error(\"Failed to fetch session ID:\", error);\r\n            }\r\n        };\r\n\r\n        fetchData();\r\n    }, []);\r\n\r\n    const addMessage = (role, content) => {\r\n        setMessages(prevMessages => [...prevMessages, { role, content }]);\r\n    };\r\n\r\n    const onDocumentLoadSuccess = ({ numPages }) => {\r\n        setNumPages(numPages);\r\n    };\r\n\r\n    return (\r\n        <Container>\r\n            <PDFViewer>\r\n                {/* Render the PDF file */}\r\n                <Document\r\n                    file=\"/path/to/StartupPlaybook.pdf\" // The URL or path to the PDF file\r\n                    onLoadSuccess={onDocumentLoadSuccess}\r\n                >\r\n                    <Page pageNumber={1} /> {/* Render the first page for simplicity */}\r\n                </Document>\r\n            </PDFViewer>\r\n            <ChatPanel>\r\n                {/* Render the chat history and input area */}\r\n                <ChatHistory messages={messages} />\r\n                <QuestionAsker sessionId={sessionId} addMessage={addMessage} />\r\n            </ChatPanel>\r\n        </Container>\r\n    );\r\n}\r\n\r\nexport default ChatApplication;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}