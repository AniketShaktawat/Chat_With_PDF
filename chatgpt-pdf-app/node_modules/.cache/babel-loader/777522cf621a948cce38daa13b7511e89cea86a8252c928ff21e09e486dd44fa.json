{"ast":null,"code":"import { __assign, __awaiter, __generator } from \"tslib\";\nimport fixWebmDuration from 'fix-webm-duration';\nimport { nanoid } from 'nanoid';\nimport { AmplitudeRecorder, DEFAULT_AMPLITUDE_RECORDER_CONFIG } from './AmplitudeRecorder';\nimport { BrowserPermission } from './BrowserPermission';\nimport { BehaviorSubject, Subject } from '../observable';\nimport { transcode } from '../transcode';\nimport { resampleWaveformData } from '../../Attachment';\nimport { createFileFromBlobs, getExtensionFromMimeType, getRecordedMediaTypeFromMimeType } from '../../ReactFileUtilities';\nimport { defaultTranslatorFunction } from '../../../i18n';\nimport { isSafari } from '../../../utils/browsers';\nimport { mergeDeepUndefined } from '../../../utils/mergeDeep';\nvar RECORDED_MIME_TYPE_BY_BROWSER = {\n  audio: {\n    others: 'audio/webm',\n    safari: 'audio/mp4;codecs=mp4a.40.2'\n  }\n};\nexport var POSSIBLE_TRANSCODING_MIME_TYPES = ['audio/wav', 'audio/mp3'];\nexport var DEFAULT_MEDIA_RECORDER_CONFIG = {\n  mimeType: isSafari() ? RECORDED_MIME_TYPE_BY_BROWSER.audio.safari : RECORDED_MIME_TYPE_BY_BROWSER.audio.others\n};\nexport var DEFAULT_AUDIO_TRANSCODER_CONFIG = {\n  sampleRate: 16000,\n  targetMimeType: 'audio/mp3'\n};\nvar disposeOfMediaStream = function (stream) {\n  if (!(stream === null || stream === void 0 ? void 0 : stream.active)) return;\n  stream.getTracks().forEach(function (track) {\n    track.stop();\n    stream.removeTrack(track);\n  });\n};\nvar logError = function (e) {\n  return e && console.error('[MEDIA RECORDER ERROR]', e);\n};\nexport var MediaRecordingState;\n(function (MediaRecordingState) {\n  MediaRecordingState[\"PAUSED\"] = \"paused\";\n  MediaRecordingState[\"RECORDING\"] = \"recording\";\n  MediaRecordingState[\"STOPPED\"] = \"stopped\";\n})(MediaRecordingState || (MediaRecordingState = {}));\nexport var RecordingAttachmentType;\n(function (RecordingAttachmentType) {\n  RecordingAttachmentType[\"VOICE_RECORDING\"] = \"voiceRecording\";\n})(RecordingAttachmentType || (RecordingAttachmentType = {}));\nvar MediaRecorderController = /** @class */function () {\n  function MediaRecorderController(_a) {\n    var _b = _a === void 0 ? {} : _a,\n      config = _b.config,\n      generateRecordingTitle = _b.generateRecordingTitle,\n      t = _b.t;\n    var _this = this;\n    this.recordedChunkDurations = [];\n    this.recordedData = [];\n    this.recordingState = new BehaviorSubject(undefined);\n    this.recording = new BehaviorSubject(undefined);\n    this.error = new Subject();\n    this.notification = new Subject();\n    this.generateRecordingTitle = function (mimeType) {\n      if (_this.customGenerateRecordingTitle) {\n        return _this.customGenerateRecordingTitle(mimeType);\n      }\n      return \"\".concat(_this.mediaType, \"_recording_\").concat(new Date().toISOString(), \".\").concat(getExtensionFromMimeType(mimeType)); // extension needed so that desktop Safari can play the asset\n    };\n    this.makeVoiceRecording = function () {\n      return __awaiter(_this, void 0, void 0, function () {\n        var mimeType, blob, file;\n        var _a, _b;\n        return __generator(this, function (_c) {\n          switch (_c.label) {\n            case 0:\n              if (this.recordingUri) URL.revokeObjectURL(this.recordingUri);\n              if (!this.recordedData.length) return [2 /*return*/];\n              mimeType = this.mediaRecorderConfig.mimeType;\n              blob = new Blob(this.recordedData, {\n                type: mimeType\n              });\n              if (!mimeType.match('audio/webm')) return [3 /*break*/, 2];\n              return [4 /*yield*/, fixWebmDuration(blob, this.durationMs, {\n                logger: function () {\n                  return null;\n                } // prevents polluting the browser console\n              })];\n            case 1:\n              // The browser does not include duration metadata with the recorded blob\n              blob = _c.sent();\n              _c.label = 2;\n            case 2:\n              if (!!mimeType.match('audio/mp4')) return [3 /*break*/, 4];\n              return [4 /*yield*/, transcode(__assign({\n                blob: blob\n              }, this.transcoderConfig))];\n            case 3:\n              blob = _c.sent();\n              _c.label = 4;\n            case 4:\n              if (!blob) return [2 /*return*/];\n              this.recordingUri = URL.createObjectURL(blob);\n              file = createFileFromBlobs({\n                blobsArray: [blob],\n                fileName: this.generateRecordingTitle(blob.type),\n                mimeType: blob.type\n              });\n              return [2 /*return*/, {\n                $internal: {\n                  file: file,\n                  id: nanoid()\n                },\n                asset_url: this.recordingUri,\n                duration: this.durationMs / 1000,\n                file_size: blob.size,\n                mime_type: blob.type,\n                title: file.name,\n                type: RecordingAttachmentType.VOICE_RECORDING,\n                waveform_data: resampleWaveformData((_b = (_a = this.amplitudeRecorder) === null || _a === void 0 ? void 0 : _a.amplitudes.value) !== null && _b !== void 0 ? _b : [], this.amplitudeRecorderConfig.sampleCount)\n              }];\n          }\n        });\n      });\n    };\n    this.handleErrorEvent = function (e) {\n      var error = e.error;\n      logError(error);\n      _this.error.next(error);\n      _this.notification.next({\n        text: _this.t('An error has occurred during recording'),\n        type: 'error'\n      });\n    };\n    this.handleDataavailableEvent = function (e) {\n      return __awaiter(_this, void 0, void 0, function () {\n        var recording, e_1;\n        var _a;\n        return __generator(this, function (_b) {\n          switch (_b.label) {\n            case 0:\n              if (!e.data.size) return [2 /*return*/];\n              if (this.mediaType !== 'audio') return [2 /*return*/];\n              _b.label = 1;\n            case 1:\n              _b.trys.push([1, 3,, 4]);\n              this.recordedData.push(e.data);\n              return [4 /*yield*/, this.makeVoiceRecording()];\n            case 2:\n              recording = _b.sent();\n              if (!recording) return [2 /*return*/];\n              (_a = this.signalRecordingReady) === null || _a === void 0 ? void 0 : _a.call(this, recording);\n              this.recording.next(recording);\n              return [3 /*break*/, 4];\n            case 3:\n              e_1 = _b.sent();\n              logError(e_1);\n              this.error.next(e_1);\n              this.notification.next({\n                text: this.t('An error has occurred during the recording processing'),\n                type: 'error'\n              });\n              return [3 /*break*/, 4];\n            case 4:\n              return [2 /*return*/];\n          }\n        });\n      });\n    };\n    this.resetRecordingState = function () {\n      _this.recordedData = [];\n      _this.recording.next(undefined);\n      _this.recordingState.next(undefined);\n      _this.recordedChunkDurations = [];\n      _this.startTime = undefined;\n    };\n    this.cleanUp = function () {\n      var _a;\n      _this.resetRecordingState();\n      if (_this.recordingUri) URL.revokeObjectURL(_this.recordingUri);\n      (_a = _this.amplitudeRecorder) === null || _a === void 0 ? void 0 : _a.close();\n      if (_this.mediaRecorder) {\n        disposeOfMediaStream(_this.mediaRecorder.stream);\n        _this.mediaRecorder.removeEventListener('dataavailable', _this.handleDataavailableEvent);\n        _this.mediaRecorder.removeEventListener('error', _this.handleErrorEvent);\n      }\n    };\n    this.start = function () {\n      return __awaiter(_this, void 0, void 0, function () {\n        var error, error, error, stream, error_1;\n        return __generator(this, function (_a) {\n          switch (_a.label) {\n            case 0:\n              if ([MediaRecordingState.RECORDING, MediaRecordingState.PAUSED].includes(this.recordingState.value)) {\n                error = new Error('Cannot start recording. Recording already in progress');\n                logError(error);\n                this.error.next(error);\n                return [2 /*return*/];\n              }\n              // account for requirement on iOS as per this bug report: https://bugs.webkit.org/show_bug.cgi?id=252303\n              if (!navigator.mediaDevices) {\n                error = new Error('Media recording is not supported');\n                logError(error);\n                this.error.next(error);\n                this.notification.next({\n                  text: this.t('Error starting recording'),\n                  type: 'error'\n                });\n                return [2 /*return*/];\n              }\n              if (this.mediaType === 'video') {\n                error = new Error(\"Video recording is not supported. Provided MIME type: \".concat(this.mediaRecorderConfig.mimeType));\n                logError(error);\n                this.error.next(error);\n                this.notification.next({\n                  text: this.t('Error starting recording'),\n                  type: 'error'\n                });\n                return [2 /*return*/];\n              }\n              if (!!this.permission.state.value) return [3 /*break*/, 2];\n              return [4 /*yield*/, this.permission.check()];\n            case 1:\n              _a.sent();\n              _a.label = 2;\n            case 2:\n              if (this.permission.state.value === 'denied') {\n                logError(new Error('Permission denied'));\n                return [2 /*return*/];\n              }\n              _a.label = 3;\n            case 3:\n              _a.trys.push([3, 5,, 6]);\n              return [4 /*yield*/, navigator.mediaDevices.getUserMedia({\n                audio: true\n              })];\n            case 4:\n              stream = _a.sent();\n              this.mediaRecorder = new MediaRecorder(stream, this.mediaRecorderConfig);\n              this.mediaRecorder.addEventListener('dataavailable', this.handleDataavailableEvent);\n              this.mediaRecorder.addEventListener('error', this.handleErrorEvent);\n              this.startTime = new Date().getTime();\n              this.mediaRecorder.start();\n              if (this.mediaType === 'audio' && stream) {\n                this.amplitudeRecorder = new AmplitudeRecorder({\n                  config: this.amplitudeRecorderConfig,\n                  stream: stream\n                });\n                this.amplitudeRecorder.start();\n              }\n              this.recordingState.next(MediaRecordingState.RECORDING);\n              return [3 /*break*/, 6];\n            case 5:\n              error_1 = _a.sent();\n              logError(error_1);\n              this.cancel();\n              this.error.next(error_1);\n              this.notification.next({\n                text: this.t('Error starting recording'),\n                type: 'error'\n              });\n              return [3 /*break*/, 6];\n            case 6:\n              return [2 /*return*/];\n          }\n        });\n      });\n    };\n    this.pause = function () {\n      var _a, _b;\n      if (_this.recordingState.value !== MediaRecordingState.RECORDING) return;\n      if (_this.startTime) {\n        _this.recordedChunkDurations.push(new Date().getTime() - _this.startTime);\n        _this.startTime = undefined;\n      }\n      (_a = _this.mediaRecorder) === null || _a === void 0 ? void 0 : _a.pause();\n      (_b = _this.amplitudeRecorder) === null || _b === void 0 ? void 0 : _b.stop();\n      _this.recordingState.next(MediaRecordingState.PAUSED);\n    };\n    this.resume = function () {\n      var _a, _b;\n      if (_this.recordingState.value !== MediaRecordingState.PAUSED) return;\n      _this.startTime = new Date().getTime();\n      (_a = _this.mediaRecorder) === null || _a === void 0 ? void 0 : _a.resume();\n      (_b = _this.amplitudeRecorder) === null || _b === void 0 ? void 0 : _b.start();\n      _this.recordingState.next(MediaRecordingState.RECORDING);\n    };\n    this.stop = function () {\n      var _a, _b, _c;\n      var recording = _this.recording.value;\n      if (recording) return Promise.resolve(recording);\n      if (![MediaRecordingState.PAUSED, MediaRecordingState.RECORDING].includes(((_a = _this.mediaRecorder) === null || _a === void 0 ? void 0 : _a.state) || '')) return Promise.resolve(undefined);\n      if (_this.startTime) {\n        _this.recordedChunkDurations.push(new Date().getTime() - _this.startTime);\n        _this.startTime = undefined;\n      }\n      var result = new Promise(function (res) {\n        _this.signalRecordingReady = res;\n      });\n      (_b = _this.mediaRecorder) === null || _b === void 0 ? void 0 : _b.stop();\n      (_c = _this.amplitudeRecorder) === null || _c === void 0 ? void 0 : _c.stop();\n      _this.recordingState.next(MediaRecordingState.STOPPED);\n      return result;\n    };\n    this.cancel = function () {\n      _this.stop();\n      _this.cleanUp();\n    };\n    this.t = t || defaultTranslatorFunction;\n    this.amplitudeRecorderConfig = mergeDeepUndefined(__assign({}, config === null || config === void 0 ? void 0 : config.amplitudeRecorderConfig), DEFAULT_AMPLITUDE_RECORDER_CONFIG);\n    this.mediaRecorderConfig = mergeDeepUndefined(__assign({}, config === null || config === void 0 ? void 0 : config.mediaRecorderConfig), DEFAULT_MEDIA_RECORDER_CONFIG);\n    this.transcoderConfig = mergeDeepUndefined(__assign({}, config === null || config === void 0 ? void 0 : config.transcoderConfig), DEFAULT_AUDIO_TRANSCODER_CONFIG);\n    if (!POSSIBLE_TRANSCODING_MIME_TYPES.includes(this.transcoderConfig.targetMimeType)) {\n      this.transcoderConfig.targetMimeType = DEFAULT_AUDIO_TRANSCODER_CONFIG.targetMimeType;\n    }\n    var mediaType = getRecordedMediaTypeFromMimeType(this.mediaRecorderConfig.mimeType);\n    if (!mediaType) {\n      throw new Error(\"Unsupported media type (supported audio or video only). Provided mimeType: \".concat(this.mediaRecorderConfig.mimeType));\n    }\n    this.mediaType = mediaType;\n    this.permission = new BrowserPermission({\n      mediaType: mediaType\n    });\n    this.customGenerateRecordingTitle = generateRecordingTitle;\n  }\n  Object.defineProperty(MediaRecorderController.prototype, \"durationMs\", {\n    get: function () {\n      return this.recordedChunkDurations.reduce(function (acc, val) {\n        return acc + val;\n      }, 0);\n    },\n    enumerable: false,\n    configurable: true\n  });\n  return MediaRecorderController;\n}();\nexport { MediaRecorderController };","map":{"version":3,"names":["__assign","__awaiter","__generator","fixWebmDuration","nanoid","AmplitudeRecorder","DEFAULT_AMPLITUDE_RECORDER_CONFIG","BrowserPermission","BehaviorSubject","Subject","transcode","resampleWaveformData","createFileFromBlobs","getExtensionFromMimeType","getRecordedMediaTypeFromMimeType","defaultTranslatorFunction","isSafari","mergeDeepUndefined","RECORDED_MIME_TYPE_BY_BROWSER","audio","others","safari","POSSIBLE_TRANSCODING_MIME_TYPES","DEFAULT_MEDIA_RECORDER_CONFIG","mimeType","DEFAULT_AUDIO_TRANSCODER_CONFIG","sampleRate","targetMimeType","disposeOfMediaStream","stream","active","getTracks","forEach","track","stop","removeTrack","logError","e","console","error","MediaRecordingState","RecordingAttachmentType","MediaRecorderController","_a","_b","config","generateRecordingTitle","t","_this","recordedChunkDurations","recordedData","recordingState","undefined","recording","notification","customGenerateRecordingTitle","concat","mediaType","Date","toISOString","makeVoiceRecording","blob","file","_c","label","recordingUri","URL","revokeObjectURL","length","mediaRecorderConfig","Blob","type","match","durationMs","logger","sent","transcoderConfig","createObjectURL","blobsArray","fileName","$internal","id","asset_url","duration","file_size","size","mime_type","title","name","VOICE_RECORDING","waveform_data","amplitudeRecorder","amplitudes","value","amplitudeRecorderConfig","sampleCount","handleErrorEvent","next","text","handleDataavailableEvent","e_1","data","trys","push","signalRecordingReady","call","resetRecordingState","startTime","cleanUp","close","mediaRecorder","removeEventListener","start","error_1","RECORDING","PAUSED","includes","Error","navigator","mediaDevices","permission","state","check","getUserMedia","MediaRecorder","addEventListener","getTime","cancel","pause","resume","Promise","resolve","result","res","STOPPED","Object","defineProperty","prototype","get","reduce","acc","val","enumerable","configurable"],"sources":["C:/Users/Aniket/Desktop/MS/NCSU/Subjects/Infinitus/chatgpt-pdf-app/node_modules/stream-chat-react/dist/components/MediaRecorder/classes/MediaRecorderController.js"],"sourcesContent":["import { __assign, __awaiter, __generator } from \"tslib\";\nimport fixWebmDuration from 'fix-webm-duration';\nimport { nanoid } from 'nanoid';\nimport { AmplitudeRecorder, DEFAULT_AMPLITUDE_RECORDER_CONFIG, } from './AmplitudeRecorder';\nimport { BrowserPermission } from './BrowserPermission';\nimport { BehaviorSubject, Subject } from '../observable';\nimport { transcode } from '../transcode';\nimport { resampleWaveformData } from '../../Attachment';\nimport { createFileFromBlobs, getExtensionFromMimeType, getRecordedMediaTypeFromMimeType, } from '../../ReactFileUtilities';\nimport { defaultTranslatorFunction } from '../../../i18n';\nimport { isSafari } from '../../../utils/browsers';\nimport { mergeDeepUndefined } from '../../../utils/mergeDeep';\nvar RECORDED_MIME_TYPE_BY_BROWSER = {\n    audio: {\n        others: 'audio/webm',\n        safari: 'audio/mp4;codecs=mp4a.40.2',\n    },\n};\nexport var POSSIBLE_TRANSCODING_MIME_TYPES = ['audio/wav', 'audio/mp3'];\nexport var DEFAULT_MEDIA_RECORDER_CONFIG = {\n    mimeType: isSafari()\n        ? RECORDED_MIME_TYPE_BY_BROWSER.audio.safari\n        : RECORDED_MIME_TYPE_BY_BROWSER.audio.others,\n};\nexport var DEFAULT_AUDIO_TRANSCODER_CONFIG = {\n    sampleRate: 16000,\n    targetMimeType: 'audio/mp3',\n};\nvar disposeOfMediaStream = function (stream) {\n    if (!(stream === null || stream === void 0 ? void 0 : stream.active))\n        return;\n    stream.getTracks().forEach(function (track) {\n        track.stop();\n        stream.removeTrack(track);\n    });\n};\nvar logError = function (e) { return e && console.error('[MEDIA RECORDER ERROR]', e); };\nexport var MediaRecordingState;\n(function (MediaRecordingState) {\n    MediaRecordingState[\"PAUSED\"] = \"paused\";\n    MediaRecordingState[\"RECORDING\"] = \"recording\";\n    MediaRecordingState[\"STOPPED\"] = \"stopped\";\n})(MediaRecordingState || (MediaRecordingState = {}));\nexport var RecordingAttachmentType;\n(function (RecordingAttachmentType) {\n    RecordingAttachmentType[\"VOICE_RECORDING\"] = \"voiceRecording\";\n})(RecordingAttachmentType || (RecordingAttachmentType = {}));\nvar MediaRecorderController = /** @class */ (function () {\n    function MediaRecorderController(_a) {\n        var _b = _a === void 0 ? {} : _a, config = _b.config, generateRecordingTitle = _b.generateRecordingTitle, t = _b.t;\n        var _this = this;\n        this.recordedChunkDurations = [];\n        this.recordedData = [];\n        this.recordingState = new BehaviorSubject(undefined);\n        this.recording = new BehaviorSubject(undefined);\n        this.error = new Subject();\n        this.notification = new Subject();\n        this.generateRecordingTitle = function (mimeType) {\n            if (_this.customGenerateRecordingTitle) {\n                return _this.customGenerateRecordingTitle(mimeType);\n            }\n            return \"\".concat(_this.mediaType, \"_recording_\").concat(new Date().toISOString(), \".\").concat(getExtensionFromMimeType(mimeType)); // extension needed so that desktop Safari can play the asset\n        };\n        this.makeVoiceRecording = function () { return __awaiter(_this, void 0, void 0, function () {\n            var mimeType, blob, file;\n            var _a, _b;\n            return __generator(this, function (_c) {\n                switch (_c.label) {\n                    case 0:\n                        if (this.recordingUri)\n                            URL.revokeObjectURL(this.recordingUri);\n                        if (!this.recordedData.length)\n                            return [2 /*return*/];\n                        mimeType = this.mediaRecorderConfig.mimeType;\n                        blob = new Blob(this.recordedData, { type: mimeType });\n                        if (!mimeType.match('audio/webm')) return [3 /*break*/, 2];\n                        return [4 /*yield*/, fixWebmDuration(blob, this.durationMs, {\n                                logger: function () { return null; }, // prevents polluting the browser console\n                            })];\n                    case 1:\n                        // The browser does not include duration metadata with the recorded blob\n                        blob = _c.sent();\n                        _c.label = 2;\n                    case 2:\n                        if (!!mimeType.match('audio/mp4')) return [3 /*break*/, 4];\n                        return [4 /*yield*/, transcode(__assign({ blob: blob }, this.transcoderConfig))];\n                    case 3:\n                        blob = _c.sent();\n                        _c.label = 4;\n                    case 4:\n                        if (!blob)\n                            return [2 /*return*/];\n                        this.recordingUri = URL.createObjectURL(blob);\n                        file = createFileFromBlobs({\n                            blobsArray: [blob],\n                            fileName: this.generateRecordingTitle(blob.type),\n                            mimeType: blob.type,\n                        });\n                        return [2 /*return*/, {\n                                $internal: {\n                                    file: file,\n                                    id: nanoid(),\n                                },\n                                asset_url: this.recordingUri,\n                                duration: this.durationMs / 1000,\n                                file_size: blob.size,\n                                mime_type: blob.type,\n                                title: file.name,\n                                type: RecordingAttachmentType.VOICE_RECORDING,\n                                waveform_data: resampleWaveformData((_b = (_a = this.amplitudeRecorder) === null || _a === void 0 ? void 0 : _a.amplitudes.value) !== null && _b !== void 0 ? _b : [], this.amplitudeRecorderConfig.sampleCount),\n                            }];\n                }\n            });\n        }); };\n        this.handleErrorEvent = function (e) {\n            var error = e.error;\n            logError(error);\n            _this.error.next(error);\n            _this.notification.next({\n                text: _this.t('An error has occurred during recording'),\n                type: 'error',\n            });\n        };\n        this.handleDataavailableEvent = function (e) { return __awaiter(_this, void 0, void 0, function () {\n            var recording, e_1;\n            var _a;\n            return __generator(this, function (_b) {\n                switch (_b.label) {\n                    case 0:\n                        if (!e.data.size)\n                            return [2 /*return*/];\n                        if (this.mediaType !== 'audio')\n                            return [2 /*return*/];\n                        _b.label = 1;\n                    case 1:\n                        _b.trys.push([1, 3, , 4]);\n                        this.recordedData.push(e.data);\n                        return [4 /*yield*/, this.makeVoiceRecording()];\n                    case 2:\n                        recording = _b.sent();\n                        if (!recording)\n                            return [2 /*return*/];\n                        (_a = this.signalRecordingReady) === null || _a === void 0 ? void 0 : _a.call(this, recording);\n                        this.recording.next(recording);\n                        return [3 /*break*/, 4];\n                    case 3:\n                        e_1 = _b.sent();\n                        logError(e_1);\n                        this.error.next(e_1);\n                        this.notification.next({\n                            text: this.t('An error has occurred during the recording processing'),\n                            type: 'error',\n                        });\n                        return [3 /*break*/, 4];\n                    case 4: return [2 /*return*/];\n                }\n            });\n        }); };\n        this.resetRecordingState = function () {\n            _this.recordedData = [];\n            _this.recording.next(undefined);\n            _this.recordingState.next(undefined);\n            _this.recordedChunkDurations = [];\n            _this.startTime = undefined;\n        };\n        this.cleanUp = function () {\n            var _a;\n            _this.resetRecordingState();\n            if (_this.recordingUri)\n                URL.revokeObjectURL(_this.recordingUri);\n            (_a = _this.amplitudeRecorder) === null || _a === void 0 ? void 0 : _a.close();\n            if (_this.mediaRecorder) {\n                disposeOfMediaStream(_this.mediaRecorder.stream);\n                _this.mediaRecorder.removeEventListener('dataavailable', _this.handleDataavailableEvent);\n                _this.mediaRecorder.removeEventListener('error', _this.handleErrorEvent);\n            }\n        };\n        this.start = function () { return __awaiter(_this, void 0, void 0, function () {\n            var error, error, error, stream, error_1;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        if ([MediaRecordingState.RECORDING, MediaRecordingState.PAUSED].includes(this.recordingState.value)) {\n                            error = new Error('Cannot start recording. Recording already in progress');\n                            logError(error);\n                            this.error.next(error);\n                            return [2 /*return*/];\n                        }\n                        // account for requirement on iOS as per this bug report: https://bugs.webkit.org/show_bug.cgi?id=252303\n                        if (!navigator.mediaDevices) {\n                            error = new Error('Media recording is not supported');\n                            logError(error);\n                            this.error.next(error);\n                            this.notification.next({ text: this.t('Error starting recording'), type: 'error' });\n                            return [2 /*return*/];\n                        }\n                        if (this.mediaType === 'video') {\n                            error = new Error(\"Video recording is not supported. Provided MIME type: \".concat(this.mediaRecorderConfig.mimeType));\n                            logError(error);\n                            this.error.next(error);\n                            this.notification.next({ text: this.t('Error starting recording'), type: 'error' });\n                            return [2 /*return*/];\n                        }\n                        if (!!this.permission.state.value) return [3 /*break*/, 2];\n                        return [4 /*yield*/, this.permission.check()];\n                    case 1:\n                        _a.sent();\n                        _a.label = 2;\n                    case 2:\n                        if (this.permission.state.value === 'denied') {\n                            logError(new Error('Permission denied'));\n                            return [2 /*return*/];\n                        }\n                        _a.label = 3;\n                    case 3:\n                        _a.trys.push([3, 5, , 6]);\n                        return [4 /*yield*/, navigator.mediaDevices.getUserMedia({ audio: true })];\n                    case 4:\n                        stream = _a.sent();\n                        this.mediaRecorder = new MediaRecorder(stream, this.mediaRecorderConfig);\n                        this.mediaRecorder.addEventListener('dataavailable', this.handleDataavailableEvent);\n                        this.mediaRecorder.addEventListener('error', this.handleErrorEvent);\n                        this.startTime = new Date().getTime();\n                        this.mediaRecorder.start();\n                        if (this.mediaType === 'audio' && stream) {\n                            this.amplitudeRecorder = new AmplitudeRecorder({\n                                config: this.amplitudeRecorderConfig,\n                                stream: stream,\n                            });\n                            this.amplitudeRecorder.start();\n                        }\n                        this.recordingState.next(MediaRecordingState.RECORDING);\n                        return [3 /*break*/, 6];\n                    case 5:\n                        error_1 = _a.sent();\n                        logError(error_1);\n                        this.cancel();\n                        this.error.next(error_1);\n                        this.notification.next({ text: this.t('Error starting recording'), type: 'error' });\n                        return [3 /*break*/, 6];\n                    case 6: return [2 /*return*/];\n                }\n            });\n        }); };\n        this.pause = function () {\n            var _a, _b;\n            if (_this.recordingState.value !== MediaRecordingState.RECORDING)\n                return;\n            if (_this.startTime) {\n                _this.recordedChunkDurations.push(new Date().getTime() - _this.startTime);\n                _this.startTime = undefined;\n            }\n            (_a = _this.mediaRecorder) === null || _a === void 0 ? void 0 : _a.pause();\n            (_b = _this.amplitudeRecorder) === null || _b === void 0 ? void 0 : _b.stop();\n            _this.recordingState.next(MediaRecordingState.PAUSED);\n        };\n        this.resume = function () {\n            var _a, _b;\n            if (_this.recordingState.value !== MediaRecordingState.PAUSED)\n                return;\n            _this.startTime = new Date().getTime();\n            (_a = _this.mediaRecorder) === null || _a === void 0 ? void 0 : _a.resume();\n            (_b = _this.amplitudeRecorder) === null || _b === void 0 ? void 0 : _b.start();\n            _this.recordingState.next(MediaRecordingState.RECORDING);\n        };\n        this.stop = function () {\n            var _a, _b, _c;\n            var recording = _this.recording.value;\n            if (recording)\n                return Promise.resolve(recording);\n            if (![MediaRecordingState.PAUSED, MediaRecordingState.RECORDING].includes((((_a = _this.mediaRecorder) === null || _a === void 0 ? void 0 : _a.state) || '')))\n                return Promise.resolve(undefined);\n            if (_this.startTime) {\n                _this.recordedChunkDurations.push(new Date().getTime() - _this.startTime);\n                _this.startTime = undefined;\n            }\n            var result = new Promise(function (res) {\n                _this.signalRecordingReady = res;\n            });\n            (_b = _this.mediaRecorder) === null || _b === void 0 ? void 0 : _b.stop();\n            (_c = _this.amplitudeRecorder) === null || _c === void 0 ? void 0 : _c.stop();\n            _this.recordingState.next(MediaRecordingState.STOPPED);\n            return result;\n        };\n        this.cancel = function () {\n            _this.stop();\n            _this.cleanUp();\n        };\n        this.t = t || defaultTranslatorFunction;\n        this.amplitudeRecorderConfig = mergeDeepUndefined(__assign({}, config === null || config === void 0 ? void 0 : config.amplitudeRecorderConfig), DEFAULT_AMPLITUDE_RECORDER_CONFIG);\n        this.mediaRecorderConfig = mergeDeepUndefined(__assign({}, config === null || config === void 0 ? void 0 : config.mediaRecorderConfig), DEFAULT_MEDIA_RECORDER_CONFIG);\n        this.transcoderConfig = mergeDeepUndefined(__assign({}, config === null || config === void 0 ? void 0 : config.transcoderConfig), DEFAULT_AUDIO_TRANSCODER_CONFIG);\n        if (!POSSIBLE_TRANSCODING_MIME_TYPES.includes(this.transcoderConfig.targetMimeType)) {\n            this.transcoderConfig.targetMimeType = DEFAULT_AUDIO_TRANSCODER_CONFIG.targetMimeType;\n        }\n        var mediaType = getRecordedMediaTypeFromMimeType(this.mediaRecorderConfig.mimeType);\n        if (!mediaType) {\n            throw new Error(\"Unsupported media type (supported audio or video only). Provided mimeType: \".concat(this.mediaRecorderConfig.mimeType));\n        }\n        this.mediaType = mediaType;\n        this.permission = new BrowserPermission({ mediaType: mediaType });\n        this.customGenerateRecordingTitle = generateRecordingTitle;\n    }\n    Object.defineProperty(MediaRecorderController.prototype, \"durationMs\", {\n        get: function () {\n            return this.recordedChunkDurations.reduce(function (acc, val) { return acc + val; }, 0);\n        },\n        enumerable: false,\n        configurable: true\n    });\n    return MediaRecorderController;\n}());\nexport { MediaRecorderController };\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}