{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Aniket\\\\Desktop\\\\MS\\\\NCSU\\\\Subjects\\\\Infinitus\\\\chatgpt-pdf-app\\\\src\\\\components\\\\ChatApplication.js\",\n  _s = $RefreshSig$();\n// src/components/ChatApplication.js\nimport React, { useState, useEffect, useRef } from 'react';\nimport axios from 'axios';\nimport NavBar from './NavBar';\nimport PdfUploader from './PdfUploader';\nimport { Worker, Viewer } from '@react-pdf-viewer/core';\nimport '@react-pdf-viewer/core/lib/styles/index.css';\nimport '@react-pdf-viewer/default-layout/lib/styles/index.css';\nimport './ChatApplication.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction ChatApplication() {\n  _s();\n  const [sessionId, setSessionId] = useState('');\n  const [chatHistory, setChatHistory] = useState([]);\n  const [inputMessage, setInputMessage] = useState('');\n  const [isLoading, setIsLoading] = useState(false);\n  const [pdfFile, setPdfFile] = useState(null);\n  const messagesEndRef = useRef(null);\n  const scrollToBottom = () => {\n    var _messagesEndRef$curre;\n    (_messagesEndRef$curre = messagesEndRef.current) === null || _messagesEndRef$curre === void 0 ? void 0 : _messagesEndRef$curre.scrollIntoView({\n      behavior: \"smooth\"\n    });\n  };\n  useEffect(() => {\n    if (!sessionId) {\n      const getSession = async () => {\n        const response = await axios.get('http://localhost:5000/get_session');\n        setSessionId(response.data.session_id);\n      };\n      getSession();\n    }\n  }, [sessionId]);\n  useEffect(() => {\n    var _messagesEndRef$curre2;\n    (_messagesEndRef$curre2 = messagesEndRef.current) === null || _messagesEndRef$curre2 === void 0 ? void 0 : _messagesEndRef$curre2.scrollIntoView({\n      behavior: \"smooth\"\n    });\n  }, [chatHistory]);\n  const handleSendMessage = async event => {\n    event.preventDefault();\n    if (inputMessage.trim()) {\n      setIsLoading(true);\n      setChatHistory([...chatHistory, {\n        role: 'user',\n        content: inputMessage\n      }]);\n      try {\n        const response = await axios.post('http://localhost:5000/ask_question', {\n          session_id: sessionId,\n          question: inputMessage\n        });\n        setChatHistory(currentHistory => [...currentHistory, {\n          role: 'assistant',\n          content: response.data.answer\n        }]);\n      } catch (error) {\n        console.error('Error sending message:', error);\n        setChatHistory(currentHistory => [...currentHistory, {\n          role: 'assistant',\n          content: \"Failed to get response.\"\n        }]);\n      }\n      setInputMessage('');\n      setIsLoading(false);\n    }\n  };\n  const clearChatHistory = () => {\n    setChatHistory([]);\n  };\n  const handlePdfUpload = file => {\n    const fileURL = URL.createObjectURL(file);\n    setPdfFile(fileURL); // Create a URL for the uploaded file\n    setSessionId(null); // Reset the session ID if needed\n    clearChatHistory(); // Clear the chat history\n    alert('PDF uploaded successfully!'); // Add this line to show popup\n  };\n  const handleFileSelected = event => {\n    const file = event.target.files[0];\n    if (file) {\n      // Set file for PDF viewer\n      setPdfFile(URL.createObjectURL(file));\n      handlePdfUpload(file); // Trigger the upload handling function\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"nav-bar\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Chat with any PDF\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Join millions of students, researchers and professionals to instantly answer questions and understand research with AI\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(PdfUploader, {\n        setSessionId: setSessionId,\n        onPdfUpload: handlePdfUpload,\n        onUploadSuccess: clearChatHistory\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(PdfUploader, {\n        setSessionId: setSessionId,\n        onUploadSuccess: clearChatHistory\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: pdfFile ? \"split-container\" : \"chat-fullscreen\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chat-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"chat-history\",\n          children: [chatHistory.map((msg, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: `message ${msg.role}`,\n            children: msg.content\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 108,\n            columnNumber: 25\n          }, this)), isLoading && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"message system\",\n            children: \"Generating Response...\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 112,\n            columnNumber: 35\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            ref: messagesEndRef\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 113,\n            columnNumber: 21\n          }, this), \" \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n          className: \"input-group\",\n          onSubmit: handleSendMessage,\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            value: inputMessage,\n            onChange: e => setInputMessage(e.target.value),\n            onKeyDown: e => e.key === 'Enter' && handleSendMessage(e),\n            placeholder: \"Type your message and press Enter\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 116,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"submit\",\n            className: \"send-button\",\n            children: \"\\u2B06 \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 123,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 13\n      }, this), pdfFile && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"pdf-container\",\n        children: /*#__PURE__*/_jsxDEV(Worker, {\n          children: /*#__PURE__*/_jsxDEV(Viewer, {\n            fileUrl: pdfFile\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 131,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 130,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 80,\n    columnNumber: 9\n  }, this);\n}\n_s(ChatApplication, \"zKP4UBu/M/NDKlpsvZzj75xx93c=\");\n_c = ChatApplication;\nexport default ChatApplication;\nvar _c;\n$RefreshReg$(_c, \"ChatApplication\");","map":{"version":3,"names":["React","useState","useEffect","useRef","axios","NavBar","PdfUploader","Worker","Viewer","jsxDEV","_jsxDEV","ChatApplication","_s","sessionId","setSessionId","chatHistory","setChatHistory","inputMessage","setInputMessage","isLoading","setIsLoading","pdfFile","setPdfFile","messagesEndRef","scrollToBottom","_messagesEndRef$curre","current","scrollIntoView","behavior","getSession","response","get","data","session_id","_messagesEndRef$curre2","handleSendMessage","event","preventDefault","trim","role","content","post","question","currentHistory","answer","error","console","clearChatHistory","handlePdfUpload","file","fileURL","URL","createObjectURL","alert","handleFileSelected","target","files","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onPdfUpload","onUploadSuccess","map","msg","index","ref","onSubmit","type","value","onChange","e","onKeyDown","key","placeholder","fileUrl","_c","$RefreshReg$"],"sources":["C:/Users/Aniket/Desktop/MS/NCSU/Subjects/Infinitus/chatgpt-pdf-app/src/components/ChatApplication.js"],"sourcesContent":["// src/components/ChatApplication.js\r\nimport React, { useState, useEffect, useRef } from 'react';\r\nimport axios from 'axios';\r\nimport NavBar from './NavBar';\r\nimport PdfUploader from './PdfUploader';\r\nimport { Worker, Viewer } from '@react-pdf-viewer/core';\r\nimport '@react-pdf-viewer/core/lib/styles/index.css';\r\nimport '@react-pdf-viewer/default-layout/lib/styles/index.css';\r\nimport './ChatApplication.css';\r\n\r\nfunction ChatApplication() {\r\n    const [sessionId, setSessionId] = useState('');\r\n    const [chatHistory, setChatHistory] = useState([]);\r\n    const [inputMessage, setInputMessage] = useState('');\r\n    const [isLoading, setIsLoading] = useState(false);\r\n    const [pdfFile, setPdfFile] = useState(null);\r\n    const messagesEndRef = useRef(null);\r\n\r\n    const scrollToBottom = () => {\r\n        messagesEndRef.current?.scrollIntoView({ behavior: \"smooth\" });\r\n    };\r\n\r\n    useEffect(() => {\r\n        if (!sessionId) {\r\n            const getSession = async () => {\r\n                const response = await axios.get('http://localhost:5000/get_session');\r\n                setSessionId(response.data.session_id);\r\n            };\r\n            getSession();\r\n        }\r\n    }, [sessionId]);\r\n\r\n    useEffect(() => {\r\n        messagesEndRef.current?.scrollIntoView({ behavior: \"smooth\" });\r\n    }, [chatHistory]);\r\n\r\n    const handleSendMessage = async (event) => {\r\n        event.preventDefault();\r\n        if (inputMessage.trim()) {\r\n            setIsLoading(true);\r\n            setChatHistory([...chatHistory, { role: 'user', content: inputMessage }]);\r\n            try {\r\n                const response = await axios.post('http://localhost:5000/ask_question', {\r\n                    session_id: sessionId,\r\n                    question: inputMessage,\r\n                });\r\n                setChatHistory(currentHistory => [...currentHistory, { role: 'assistant', content: response.data.answer }]);\r\n            } catch (error) {\r\n                console.error('Error sending message:', error);\r\n                setChatHistory(currentHistory => [...currentHistory, { role: 'assistant', content: \"Failed to get response.\" }]);\r\n            }\r\n            setInputMessage('');\r\n            setIsLoading(false);\r\n        }\r\n    };\r\n\r\n    const clearChatHistory = () => {\r\n        setChatHistory([]);\r\n    };\r\n    \r\n\r\n    const handlePdfUpload = (file) => {\r\n        const fileURL = URL.createObjectURL(file);\r\n        setPdfFile(fileURL); // Create a URL for the uploaded file\r\n        setSessionId(null); // Reset the session ID if needed\r\n        clearChatHistory(); // Clear the chat history\r\n        alert('PDF uploaded successfully!'); // Add this line to show popup\r\n    };\r\n\r\n    const handleFileSelected = (event) => {\r\n        const file = event.target.files[0];\r\n        if (file) {\r\n            // Set file for PDF viewer\r\n            setPdfFile(URL.createObjectURL(file));\r\n            handlePdfUpload(file); // Trigger the upload handling function\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div className=\"app-container\">\r\n        {/* <NavBar setSessionId={setSessionId} handlePdfUpload={handlePdfUpload} /> */}\r\n        {/* <NavBar onFileSelect={handleFileSelected} />\r\n         */}\r\n        <div className=\"nav-bar\">\r\n            <h1>Chat with any PDF</h1>\r\n            <p>Join millions of students, researchers and professionals to instantly answer questions and understand research with AI</p>\r\n            {/* <form onSubmit={handleSubmit}>\r\n                <input\r\n                    type=\"file\"\r\n                    onChange={handleFileChange}\r\n                    accept=\".pdf\"\r\n                    className=\"file-upload\"\r\n                />\r\n            </form> */}\r\n\r\n        <PdfUploader setSessionId={setSessionId} onPdfUpload={handlePdfUpload} onUploadSuccess={clearChatHistory}  />   \r\n\r\n        <PdfUploader setSessionId={setSessionId} onUploadSuccess={clearChatHistory} />\r\n        \r\n        </div>\r\n        <div className={pdfFile ? \"split-container\" : \"chat-fullscreen\"}>\r\n            \r\n  \r\n            <div className=\"chat-container\">\r\n                {/* <PdfUploader setSessionId={setSessionId} onUploadSuccess={clearChatHistory} /> */}\r\n                <div className=\"chat-history\">\r\n                    {chatHistory.map((msg, index) => (\r\n                        <div key={index} className={`message ${msg.role}`}>\r\n                            {msg.content}\r\n                        </div>\r\n                    ))}\r\n                    {isLoading && <div className=\"message system\">Generating Response...</div>}\r\n                    <div ref={messagesEndRef} /> {/* Empty div for auto-scrolling */}\r\n                </div>\r\n                <form className=\"input-group\" onSubmit={handleSendMessage}>\r\n                    <input\r\n                        type=\"text\"\r\n                        value={inputMessage}\r\n                        onChange={(e) => setInputMessage(e.target.value)}\r\n                        onKeyDown={(e) => e.key === 'Enter' && handleSendMessage(e)}\r\n                        placeholder=\"Type your message and press Enter\"\r\n                    />\r\n                    <button type=\"submit\" className=\"send-button\">\r\n                        &#x2B06; {/* Unicode character for upward arrow */}\r\n                    </button>\r\n                </form>\r\n            </div>\r\n            {pdfFile && (\r\n          <div className=\"pdf-container\">\r\n            <Worker>\r\n              <Viewer fileUrl={pdfFile} />\r\n            </Worker>\r\n          </div>\r\n        )}\r\n      </div>\r\n    </div>\r\n    );\r\n}\r\n\r\nexport default ChatApplication;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}