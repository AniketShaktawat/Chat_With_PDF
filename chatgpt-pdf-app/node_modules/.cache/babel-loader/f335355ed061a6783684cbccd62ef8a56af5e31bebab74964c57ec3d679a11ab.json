{"ast":null,"code":"import { __assign, __awaiter, __generator, __rest } from \"tslib\";\nimport { useCallback } from 'react';\nimport { nanoid } from 'nanoid';\nimport { useImageUploads } from './useImageUploads';\nimport { useFileUploads } from './useFileUploads';\nimport { checkUploadPermissions } from './utils';\nimport { useChannelActionContext, useChannelStateContext, useChatContext, useTranslationContext } from '../../../context';\nvar apiMaxNumberOfFiles = 10;\nexport var useAttachments = function (props, state, dispatch, textareaRef) {\n  var doFileUploadRequest = props.doFileUploadRequest,\n    errorHandler = props.errorHandler,\n    noFiles = props.noFiles;\n  var fileUploads = state.fileUploads,\n    imageUploads = state.imageUploads;\n  var getAppSettings = useChatContext('useAttachments').getAppSettings;\n  var t = useTranslationContext('useAttachments').t;\n  var addNotification = useChannelActionContext('useAttachments').addNotification;\n  var _a = useChannelStateContext('useAttachments'),\n    channel = _a.channel,\n    maxNumberOfFiles = _a.maxNumberOfFiles,\n    multipleUploads = _a.multipleUploads;\n  var _b = useFileUploads(props, state, dispatch),\n    removeFile = _b.removeFile,\n    uploadFile = _b.uploadFile;\n  var _c = useImageUploads(props, state, dispatch),\n    removeImage = _c.removeImage,\n    uploadImage = _c.uploadImage;\n  // Number of files that the user can still add. Should never be more than the amount allowed by the API.\n  // If multipleUploads is false, we only want to allow a single upload.\n  var maxFilesAllowed = !multipleUploads ? 1 : maxNumberOfFiles || apiMaxNumberOfFiles;\n  // OG attachments should not be counted towards \"numberOfImages\"\n  var numberOfImages = Object.values(imageUploads).filter(function (_a) {\n    var og_scrape_url = _a.og_scrape_url,\n      state = _a.state;\n    return state !== 'failed' && !og_scrape_url;\n  }).length;\n  var numberOfFiles = Object.values(fileUploads).filter(function (_a) {\n    var state = _a.state;\n    return state !== 'failed';\n  }).length;\n  var numberOfUploads = numberOfImages + numberOfFiles;\n  var maxFilesLeft = maxFilesAllowed - numberOfUploads;\n  var uploadNewFiles = useCallback(function (files) {\n    var _a;\n    Array.from(files).slice(0, maxFilesLeft).forEach(function (file) {\n      var _a;\n      var id = nanoid();\n      if (file.type.startsWith('image/') && !file.type.endsWith('.photoshop') // photoshop files begin with 'image/'\n      ) {\n        dispatch({\n          file: file,\n          id: id,\n          previewUri: (_a = URL.createObjectURL) === null || _a === void 0 ? void 0 : _a.call(URL, file),\n          state: 'uploading',\n          type: 'setImageUpload'\n        });\n      } else if (file instanceof File && !noFiles) {\n        dispatch({\n          file: file,\n          id: id,\n          state: 'uploading',\n          type: 'setFileUpload'\n        });\n      }\n    });\n    (_a = textareaRef === null || textareaRef === void 0 ? void 0 : textareaRef.current) === null || _a === void 0 ? void 0 : _a.focus();\n  },\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  [maxFilesLeft, noFiles]);\n  var removeAttachment = function (id) {\n    dispatch({\n      id: id,\n      type: 'removeAttachment'\n    });\n  };\n  var uploadAttachment = useCallback(function (att) {\n    return __awaiter(void 0, void 0, void 0, function () {\n      var $internal, attachment, id, file, canUpload, notificationText, response, uploadedAttachment, error_1, finalError, failedAttachment;\n      var _a;\n      return __generator(this, function (_b) {\n        switch (_b.label) {\n          case 0:\n            $internal = att.$internal, attachment = __rest(att, [\"$internal\"]);\n            if (!($internal === null || $internal === void 0 ? void 0 : $internal.file)) return [2 /*return*/, att];\n            id = (_a = $internal === null || $internal === void 0 ? void 0 : $internal.id) !== null && _a !== void 0 ? _a : nanoid();\n            file = $internal.file;\n            return [4 /*yield*/, checkUploadPermissions({\n              addNotification: addNotification,\n              file: file,\n              getAppSettings: getAppSettings,\n              t: t,\n              uploadType: 'file'\n            })];\n          case 1:\n            canUpload = _b.sent();\n            if (!canUpload) {\n              notificationText = t('Missing permissions to upload the attachment');\n              console.error(new Error(notificationText));\n              addNotification(notificationText, 'error');\n              return [2 /*return*/, att];\n            }\n            dispatch({\n              attachment: __assign(__assign({}, attachment), {\n                $internal: __assign(__assign({}, $internal), {\n                  id: id,\n                  uploadState: 'uploading'\n                })\n              }),\n              type: 'upsertAttachment'\n            });\n            _b.label = 2;\n          case 2:\n            _b.trys.push([2, 7,, 8]);\n            response = void 0;\n            if (!doFileUploadRequest) return [3 /*break*/, 4];\n            return [4 /*yield*/, doFileUploadRequest(file, channel)];\n          case 3:\n            response = _b.sent();\n            return [3 /*break*/, 6];\n          case 4:\n            return [4 /*yield*/, channel.sendFile(file)];\n          case 5:\n            response = _b.sent();\n            _b.label = 6;\n          case 6:\n            uploadedAttachment = __assign(__assign({}, attachment), {\n              $internal: __assign(__assign({}, $internal), {\n                uploadState: 'finished'\n              }),\n              asset_url: response.file\n            });\n            dispatch({\n              attachment: uploadedAttachment,\n              type: 'upsertAttachment'\n            });\n            return [2 /*return*/, uploadedAttachment];\n          case 7:\n            error_1 = _b.sent();\n            finalError = {\n              message: t('Error uploading attachment'),\n              name: 'Error'\n            };\n            if (typeof error_1.message === 'string') {\n              finalError = error_1;\n            } else if (typeof error_1 === 'object') {\n              finalError = Object.assign(finalError, error_1);\n            }\n            console.error(finalError);\n            addNotification(finalError.message, 'error');\n            failedAttachment = __assign(__assign({}, attachment), {\n              $internal: __assign(__assign({}, $internal), {\n                uploadState: 'failed'\n              })\n            });\n            dispatch({\n              attachment: failedAttachment,\n              type: 'upsertAttachment'\n            });\n            if (errorHandler) {\n              errorHandler(finalError, 'upload-attachment', file);\n            }\n            return [2 /*return*/, failedAttachment];\n          case 8:\n            return [2 /*return*/];\n        }\n      });\n    });\n  }, [addNotification, channel, doFileUploadRequest, dispatch, errorHandler, getAppSettings, t]);\n  return {\n    maxFilesLeft: maxFilesLeft,\n    numberOfUploads: numberOfUploads,\n    removeAttachment: removeAttachment,\n    removeFile: removeFile,\n    removeImage: removeImage,\n    uploadAttachment: uploadAttachment,\n    uploadFile: uploadFile,\n    uploadImage: uploadImage,\n    uploadNewFiles: uploadNewFiles\n  };\n};","map":{"version":3,"names":["__assign","__awaiter","__generator","__rest","useCallback","nanoid","useImageUploads","useFileUploads","checkUploadPermissions","useChannelActionContext","useChannelStateContext","useChatContext","useTranslationContext","apiMaxNumberOfFiles","useAttachments","props","state","dispatch","textareaRef","doFileUploadRequest","errorHandler","noFiles","fileUploads","imageUploads","getAppSettings","t","addNotification","_a","channel","maxNumberOfFiles","multipleUploads","_b","removeFile","uploadFile","_c","removeImage","uploadImage","maxFilesAllowed","numberOfImages","Object","values","filter","og_scrape_url","length","numberOfFiles","numberOfUploads","maxFilesLeft","uploadNewFiles","files","Array","from","slice","forEach","file","id","type","startsWith","endsWith","previewUri","URL","createObjectURL","call","File","current","focus","removeAttachment","uploadAttachment","att","$internal","attachment","canUpload","notificationText","response","uploadedAttachment","error_1","finalError","failedAttachment","label","uploadType","sent","console","error","Error","uploadState","trys","push","sendFile","asset_url","message","name","assign"],"sources":["C:/Users/Aniket/Desktop/MS/NCSU/Subjects/Infinitus/chatgpt-pdf-app/node_modules/stream-chat-react/dist/components/MessageInput/hooks/useAttachments.js"],"sourcesContent":["import { __assign, __awaiter, __generator, __rest } from \"tslib\";\nimport { useCallback } from 'react';\nimport { nanoid } from 'nanoid';\nimport { useImageUploads } from './useImageUploads';\nimport { useFileUploads } from './useFileUploads';\nimport { checkUploadPermissions } from './utils';\nimport { useChannelActionContext, useChannelStateContext, useChatContext, useTranslationContext, } from '../../../context';\nvar apiMaxNumberOfFiles = 10;\nexport var useAttachments = function (props, state, dispatch, textareaRef) {\n    var doFileUploadRequest = props.doFileUploadRequest, errorHandler = props.errorHandler, noFiles = props.noFiles;\n    var fileUploads = state.fileUploads, imageUploads = state.imageUploads;\n    var getAppSettings = useChatContext('useAttachments').getAppSettings;\n    var t = useTranslationContext('useAttachments').t;\n    var addNotification = useChannelActionContext('useAttachments').addNotification;\n    var _a = useChannelStateContext('useAttachments'), channel = _a.channel, maxNumberOfFiles = _a.maxNumberOfFiles, multipleUploads = _a.multipleUploads;\n    var _b = useFileUploads(props, state, dispatch), removeFile = _b.removeFile, uploadFile = _b.uploadFile;\n    var _c = useImageUploads(props, state, dispatch), removeImage = _c.removeImage, uploadImage = _c.uploadImage;\n    // Number of files that the user can still add. Should never be more than the amount allowed by the API.\n    // If multipleUploads is false, we only want to allow a single upload.\n    var maxFilesAllowed = !multipleUploads ? 1 : maxNumberOfFiles || apiMaxNumberOfFiles;\n    // OG attachments should not be counted towards \"numberOfImages\"\n    var numberOfImages = Object.values(imageUploads).filter(function (_a) {\n        var og_scrape_url = _a.og_scrape_url, state = _a.state;\n        return state !== 'failed' && !og_scrape_url;\n    }).length;\n    var numberOfFiles = Object.values(fileUploads).filter(function (_a) {\n        var state = _a.state;\n        return state !== 'failed';\n    }).length;\n    var numberOfUploads = numberOfImages + numberOfFiles;\n    var maxFilesLeft = maxFilesAllowed - numberOfUploads;\n    var uploadNewFiles = useCallback(function (files) {\n        var _a;\n        Array.from(files)\n            .slice(0, maxFilesLeft)\n            .forEach(function (file) {\n            var _a;\n            var id = nanoid();\n            if (file.type.startsWith('image/') &&\n                !file.type.endsWith('.photoshop') // photoshop files begin with 'image/'\n            ) {\n                dispatch({\n                    file: file,\n                    id: id,\n                    previewUri: (_a = URL.createObjectURL) === null || _a === void 0 ? void 0 : _a.call(URL, file),\n                    state: 'uploading',\n                    type: 'setImageUpload',\n                });\n            }\n            else if (file instanceof File && !noFiles) {\n                dispatch({ file: file, id: id, state: 'uploading', type: 'setFileUpload' });\n            }\n        });\n        (_a = textareaRef === null || textareaRef === void 0 ? void 0 : textareaRef.current) === null || _a === void 0 ? void 0 : _a.focus();\n    }, \n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    [maxFilesLeft, noFiles]);\n    var removeAttachment = function (id) {\n        dispatch({ id: id, type: 'removeAttachment' });\n    };\n    var uploadAttachment = useCallback(function (att) { return __awaiter(void 0, void 0, void 0, function () {\n        var $internal, attachment, id, file, canUpload, notificationText, response, uploadedAttachment, error_1, finalError, failedAttachment;\n        var _a;\n        return __generator(this, function (_b) {\n            switch (_b.label) {\n                case 0:\n                    $internal = att.$internal, attachment = __rest(att, [\"$internal\"]);\n                    if (!($internal === null || $internal === void 0 ? void 0 : $internal.file))\n                        return [2 /*return*/, att];\n                    id = (_a = $internal === null || $internal === void 0 ? void 0 : $internal.id) !== null && _a !== void 0 ? _a : nanoid();\n                    file = $internal.file;\n                    return [4 /*yield*/, checkUploadPermissions({\n                            addNotification: addNotification,\n                            file: file,\n                            getAppSettings: getAppSettings,\n                            t: t,\n                            uploadType: 'file',\n                        })];\n                case 1:\n                    canUpload = _b.sent();\n                    if (!canUpload) {\n                        notificationText = t('Missing permissions to upload the attachment');\n                        console.error(new Error(notificationText));\n                        addNotification(notificationText, 'error');\n                        return [2 /*return*/, att];\n                    }\n                    dispatch({\n                        attachment: __assign(__assign({}, attachment), { $internal: __assign(__assign({}, $internal), { id: id, uploadState: 'uploading' }) }),\n                        type: 'upsertAttachment',\n                    });\n                    _b.label = 2;\n                case 2:\n                    _b.trys.push([2, 7, , 8]);\n                    response = void 0;\n                    if (!doFileUploadRequest) return [3 /*break*/, 4];\n                    return [4 /*yield*/, doFileUploadRequest(file, channel)];\n                case 3:\n                    response = _b.sent();\n                    return [3 /*break*/, 6];\n                case 4: return [4 /*yield*/, channel.sendFile(file)];\n                case 5:\n                    response = _b.sent();\n                    _b.label = 6;\n                case 6:\n                    uploadedAttachment = __assign(__assign({}, attachment), { $internal: __assign(__assign({}, $internal), { uploadState: 'finished' }), asset_url: response.file });\n                    dispatch({\n                        attachment: uploadedAttachment,\n                        type: 'upsertAttachment',\n                    });\n                    return [2 /*return*/, uploadedAttachment];\n                case 7:\n                    error_1 = _b.sent();\n                    finalError = { message: t('Error uploading attachment'), name: 'Error' };\n                    if (typeof error_1.message === 'string') {\n                        finalError = error_1;\n                    }\n                    else if (typeof error_1 === 'object') {\n                        finalError = Object.assign(finalError, error_1);\n                    }\n                    console.error(finalError);\n                    addNotification(finalError.message, 'error');\n                    failedAttachment = __assign(__assign({}, attachment), { $internal: __assign(__assign({}, $internal), { uploadState: 'failed' }) });\n                    dispatch({\n                        attachment: failedAttachment,\n                        type: 'upsertAttachment',\n                    });\n                    if (errorHandler) {\n                        errorHandler(finalError, 'upload-attachment', file);\n                    }\n                    return [2 /*return*/, failedAttachment];\n                case 8: return [2 /*return*/];\n            }\n        });\n    }); }, [addNotification, channel, doFileUploadRequest, dispatch, errorHandler, getAppSettings, t]);\n    return {\n        maxFilesLeft: maxFilesLeft,\n        numberOfUploads: numberOfUploads,\n        removeAttachment: removeAttachment,\n        removeFile: removeFile,\n        removeImage: removeImage,\n        uploadAttachment: uploadAttachment,\n        uploadFile: uploadFile,\n        uploadImage: uploadImage,\n        uploadNewFiles: uploadNewFiles,\n    };\n};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}