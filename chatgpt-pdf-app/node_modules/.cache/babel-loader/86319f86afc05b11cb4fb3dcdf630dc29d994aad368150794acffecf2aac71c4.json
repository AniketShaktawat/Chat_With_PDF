{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Aniket\\\\Desktop\\\\MS\\\\NCSU\\\\Subjects\\\\Infinitus\\\\chatgpt-pdf-app\\\\src\\\\components\\\\ChatApplication.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport ReactDOM from 'react-dom';\nimport { StreamChat } from 'stream-chat';\nimport { Chat, Channel, ChannelList, ChannelHeader, MessageList, MessageInput, Window, Thread, ChannelListMessenger, ChannelPreviewMessenger, MessageInputFlat, MessageSimple, TypingIndicator } from 'stream-chat-react';\nimport 'stream-chat-react/dist/css/index.css'; // Import Stream Chat CSS\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst chatClient = new StreamChat('qk4nn7rpcn75');\nconst userToken = 'eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJ1c2VyX2lkIjoiYnJva2VuLXdhdGVyZmFsbC01In0.d1xKTlD_D0G-VsBoDBNbaLjO-2XWNA8rlTm4ru4sMHg';\nfunction ChatApplication() {\n  _s();\n  const [sessionId, setSessionId] = useState('');\n\n  // Connect the user to Stream Chat\n  useEffect(() => {\n    chatClient.connectUser({\n      id: 'broken-waterfall-5',\n      name: 'Broken waterfall',\n      image: 'https://getstream.io/random_svg/?id=broken-waterfall-5&name=Broken+waterfall'\n    }, userToken);\n\n    // Fetch the session ID from the Flask backend when the component mounts\n    const getSession = async () => {\n      try {\n        const response = await fetch('http://localhost:5000/get_session');\n        const data = await response.json();\n        setSessionId(data.session_id);\n      } catch (error) {\n        console.error(\"Failed to fetch session ID:\", error);\n      }\n    };\n    getSession();\n    return () => {\n      chatClient.disconnectUser();\n    };\n  }, []);\n  return /*#__PURE__*/_jsxDEV(Chat, {\n    client: chatClient,\n    theme: \"messaging light\",\n    children: [/*#__PURE__*/_jsxDEV(ChannelList, {\n      filters: {\n        type: 'messaging',\n        members: {\n          $in: ['broken-waterfall-5']\n        }\n      },\n      sort: {\n        last_message_at: -1\n      },\n      List: ChannelListMessenger,\n      Preview: ChannelPreviewMessenger\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Channel, {\n      children: [/*#__PURE__*/_jsxDEV(Window, {\n        children: [/*#__PURE__*/_jsxDEV(ChannelHeader, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(MessageList, {\n          TypingIndicator: TypingIndicator\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(MessageInput, {\n          Input: MessageInputFlat,\n          focus: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Thread, {\n        Message: MessageSimple\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 57,\n    columnNumber: 9\n  }, this);\n}\n_s(ChatApplication, \"jIWEBsBpP3cymNVG4PW/IcTpWYk=\");\n_c = ChatApplication;\nReactDOM.render( /*#__PURE__*/_jsxDEV(ChatApplication, {}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 76,\n  columnNumber: 17\n}, this), document.getElementById('root'));\nexport default ChatApplication;\nvar _c;\n$RefreshReg$(_c, \"ChatApplication\");","map":{"version":3,"names":["React","useEffect","useState","ReactDOM","StreamChat","Chat","Channel","ChannelList","ChannelHeader","MessageList","MessageInput","Window","Thread","ChannelListMessenger","ChannelPreviewMessenger","MessageInputFlat","MessageSimple","TypingIndicator","jsxDEV","_jsxDEV","chatClient","userToken","ChatApplication","_s","sessionId","setSessionId","connectUser","id","name","image","getSession","response","fetch","data","json","session_id","error","console","disconnectUser","client","theme","children","filters","type","members","$in","sort","last_message_at","List","Preview","fileName","_jsxFileName","lineNumber","columnNumber","Input","focus","Message","_c","render","document","getElementById","$RefreshReg$"],"sources":["C:/Users/Aniket/Desktop/MS/NCSU/Subjects/Infinitus/chatgpt-pdf-app/src/components/ChatApplication.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { StreamChat } from 'stream-chat';\r\nimport {\r\n  Chat,\r\n  Channel,\r\n  ChannelList,\r\n  ChannelHeader,\r\n  MessageList,\r\n  MessageInput,\r\n  Window,\r\n  Thread,\r\n  ChannelListMessenger,\r\n  ChannelPreviewMessenger,\r\n  MessageInputFlat,\r\n  MessageSimple,\r\n  TypingIndicator\r\n} from 'stream-chat-react';\r\nimport 'stream-chat-react/dist/css/index.css'; // Import Stream Chat CSS\r\n\r\nconst chatClient = new StreamChat('qk4nn7rpcn75');\r\nconst userToken = 'eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJ1c2VyX2lkIjoiYnJva2VuLXdhdGVyZmFsbC01In0.d1xKTlD_D0G-VsBoDBNbaLjO-2XWNA8rlTm4ru4sMHg';\r\n\r\nfunction ChatApplication() {\r\n    const [sessionId, setSessionId] = useState('');\r\n\r\n    // Connect the user to Stream Chat\r\n    useEffect(() => {\r\n        chatClient.connectUser(\r\n            {\r\n                id: 'broken-waterfall-5',\r\n                name: 'Broken waterfall',\r\n                image: 'https://getstream.io/random_svg/?id=broken-waterfall-5&name=Broken+waterfall'\r\n            },\r\n            userToken\r\n        );\r\n\r\n        // Fetch the session ID from the Flask backend when the component mounts\r\n        const getSession = async () => {\r\n            try {\r\n                const response = await fetch('http://localhost:5000/get_session');\r\n                const data = await response.json();\r\n                setSessionId(data.session_id);\r\n            } catch (error) {\r\n                console.error(\"Failed to fetch session ID:\", error);\r\n            }\r\n        };\r\n\r\n        getSession();\r\n\r\n        return () => {\r\n            chatClient.disconnectUser();\r\n        };\r\n    }, []);\r\n\r\n    return (\r\n        <Chat client={chatClient} theme=\"messaging light\">\r\n            <ChannelList\r\n                filters={{ type: 'messaging', members: { $in: ['broken-waterfall-5'] } }}\r\n                sort={{ last_message_at: -1 }}\r\n                List={ChannelListMessenger}\r\n                Preview={ChannelPreviewMessenger}\r\n            />\r\n            <Channel>\r\n                <Window>\r\n                    <ChannelHeader />\r\n                    <MessageList TypingIndicator={TypingIndicator} />\r\n                    <MessageInput Input={MessageInputFlat} focus />\r\n                </Window>\r\n                <Thread Message={MessageSimple} />\r\n            </Channel>\r\n        </Chat>\r\n    );\r\n}\r\n\r\nReactDOM.render(<ChatApplication />, document.getElementById('root'));\r\nexport default ChatApplication;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}