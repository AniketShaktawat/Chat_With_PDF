{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Aniket\\\\Desktop\\\\MS\\\\NCSU\\\\Subjects\\\\Infinitus\\\\chatgpt-pdf-app\\\\src\\\\components\\\\ChatApplication.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport QuestionAsker from './QuestionAsker';\nimport './ChatApplication.css'; // We'll create this CSS file for styling\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction ChatApplication() {\n  _s();\n  const [sessionId, setSessionId] = useState('');\n  const [messages, setMessages] = useState([]);\n  useEffect(() => {\n    const fetchData = async () => {\n      const response = await axios.get('http://localhost:5000/get_session');\n      setSessionId(response.data.session_id);\n    };\n    fetchData();\n  }, []);\n  const addMessage = (role, content) => {\n    const newMessage = {\n      role,\n      content\n    };\n    setMessages([...messages, newMessage]);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"chat-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chat-history\",\n      children: messages.map((msg, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `message ${msg.role}`,\n        children: msg.content\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(QuestionAsker, {\n      sessionId: sessionId,\n      addMessage: addMessage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 9\n  }, this);\n}\n_s(ChatApplication, \"uF349KxTO0C4zn6MIHDTYSSEoQk=\");\n_c = ChatApplication;\nexport default ChatApplication;\nvar _c;\n$RefreshReg$(_c, \"ChatApplication\");","map":{"version":3,"names":["React","useState","useEffect","axios","QuestionAsker","jsxDEV","_jsxDEV","ChatApplication","_s","sessionId","setSessionId","messages","setMessages","fetchData","response","get","data","session_id","addMessage","role","content","newMessage","className","children","map","msg","index","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/Aniket/Desktop/MS/NCSU/Subjects/Infinitus/chatgpt-pdf-app/src/components/ChatApplication.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport QuestionAsker from './QuestionAsker';\r\nimport './ChatApplication.css';  // We'll create this CSS file for styling\r\n\r\nfunction ChatApplication() {\r\n    const [sessionId, setSessionId] = useState('');\r\n    const [messages, setMessages] = useState([]);\r\n\r\n    useEffect(() => {\r\n        const fetchData = async () => {\r\n            const response = await axios.get('http://localhost:5000/get_session');\r\n            setSessionId(response.data.session_id);\r\n        };\r\n        fetchData();\r\n    }, []);\r\n\r\n    const addMessage = (role, content) => {\r\n        const newMessage = { role, content };\r\n        setMessages([...messages, newMessage]);\r\n    };\r\n\r\n    return (\r\n        <div className=\"chat-container\">\r\n            <div className=\"chat-history\">\r\n                {messages.map((msg, index) => (\r\n                    <div key={index} className={`message ${msg.role}`}>\r\n                        {msg.content}\r\n                    </div>\r\n                ))}\r\n            </div>\r\n            <QuestionAsker sessionId={sessionId} addMessage={addMessage} />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default ChatApplication;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,KAAK,MAAM,OAAO;AACzB,OAAOC,aAAa,MAAM,iBAAiB;AAC3C,OAAO,uBAAuB,CAAC,CAAE;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEjC,SAASC,eAAeA,CAAA,EAAG;EAAAC,EAAA;EACvB,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EAC9C,MAAM,CAACU,QAAQ,EAAEC,WAAW,CAAC,GAAGX,QAAQ,CAAC,EAAE,CAAC;EAE5CC,SAAS,CAAC,MAAM;IACZ,MAAMW,SAAS,GAAG,MAAAA,CAAA,KAAY;MAC1B,MAAMC,QAAQ,GAAG,MAAMX,KAAK,CAACY,GAAG,CAAC,mCAAmC,CAAC;MACrEL,YAAY,CAACI,QAAQ,CAACE,IAAI,CAACC,UAAU,CAAC;IAC1C,CAAC;IACDJ,SAAS,CAAC,CAAC;EACf,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMK,UAAU,GAAGA,CAACC,IAAI,EAAEC,OAAO,KAAK;IAClC,MAAMC,UAAU,GAAG;MAAEF,IAAI;MAAEC;IAAQ,CAAC;IACpCR,WAAW,CAAC,CAAC,GAAGD,QAAQ,EAAEU,UAAU,CAAC,CAAC;EAC1C,CAAC;EAED,oBACIf,OAAA;IAAKgB,SAAS,EAAC,gBAAgB;IAAAC,QAAA,gBAC3BjB,OAAA;MAAKgB,SAAS,EAAC,cAAc;MAAAC,QAAA,EACxBZ,QAAQ,CAACa,GAAG,CAAC,CAACC,GAAG,EAAEC,KAAK,kBACrBpB,OAAA;QAAiBgB,SAAS,EAAG,WAAUG,GAAG,CAACN,IAAK,EAAE;QAAAI,QAAA,EAC7CE,GAAG,CAACL;MAAO,GADNM,KAAK;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAEV,CACR;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACD,CAAC,eACNxB,OAAA,CAACF,aAAa;MAACK,SAAS,EAAEA,SAAU;MAACS,UAAU,EAAEA;IAAW;MAAAS,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC9D,CAAC;AAEd;AAACtB,EAAA,CA7BQD,eAAe;AAAAwB,EAAA,GAAfxB,eAAe;AA+BxB,eAAeA,eAAe;AAAC,IAAAwB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}