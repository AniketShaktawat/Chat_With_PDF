{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Aniket\\\\Desktop\\\\MS\\\\NCSU\\\\Subjects\\\\Infinitus\\\\chatgpt-pdf-app\\\\src\\\\components\\\\QuestionAsker.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction QuestionAsker({\n  sessionId,\n  addMessage\n}) {\n  _s();\n  const [question, setQuestion] = useState('');\n  const handleQuestionChange = event => {\n    setQuestion(event.target.value);\n  };\n  const handleSubmit = async event => {\n    event.preventDefault();\n    try {\n      const response = await axios.post('http://localhost:5000/ask_question', {\n        session_id: sessionId,\n        question\n      });\n      addMessage('user', question);\n      addMessage('assistant', response.data.answer);\n    } catch (error) {\n      console.error('Error asking question:', error);\n      alert('Failed to ask question');\n    }\n    setQuestion(''); // Clear the input after sending\n  };\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleSubmit,\n    className: \"input-form\",\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      value: question,\n      onChange: handleQuestionChange,\n      placeholder: \"Ask a question\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"submit\",\n      children: \"Send\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 9\n  }, this);\n}\n_s(QuestionAsker, \"X6N7EgaEMrwiXWJKemnQbxZKjLQ=\");\n_c = QuestionAsker;\nexport default QuestionAsker;\nvar _c;\n$RefreshReg$(_c, \"QuestionAsker\");","map":{"version":3,"names":["React","useState","axios","jsxDEV","_jsxDEV","QuestionAsker","sessionId","addMessage","_s","question","setQuestion","handleQuestionChange","event","target","value","handleSubmit","preventDefault","response","post","session_id","data","answer","error","console","alert","onSubmit","className","children","type","onChange","placeholder","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/Aniket/Desktop/MS/NCSU/Subjects/Infinitus/chatgpt-pdf-app/src/components/QuestionAsker.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport axios from 'axios';\r\n\r\nfunction QuestionAsker({ sessionId, addMessage }) {\r\n    const [question, setQuestion] = useState('');\r\n\r\n    const handleQuestionChange = (event) => {\r\n        setQuestion(event.target.value);\r\n    };\r\n\r\n    const handleSubmit = async (event) => {\r\n        event.preventDefault();\r\n        try {\r\n            const response = await axios.post('http://localhost:5000/ask_question', {\r\n                session_id: sessionId,\r\n                question,\r\n            });\r\n            addMessage('user', question);\r\n            addMessage('assistant', response.data.answer);\r\n        } catch (error) {\r\n            console.error('Error asking question:', error);\r\n            alert('Failed to ask question');\r\n        }\r\n        setQuestion('');  // Clear the input after sending\r\n    };\r\n\r\n    return (\r\n        <form onSubmit={handleSubmit} className=\"input-form\">\r\n            <input type=\"text\" value={question} onChange={handleQuestionChange} placeholder=\"Ask a question\" />\r\n            <button type=\"submit\">Send</button>\r\n        </form>\r\n    );\r\n}\r\n\r\nexport default QuestionAsker;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,SAASC,aAAaA,CAAC;EAAEC,SAAS;EAAEC;AAAW,CAAC,EAAE;EAAAC,EAAA;EAC9C,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EAE5C,MAAMU,oBAAoB,GAAIC,KAAK,IAAK;IACpCF,WAAW,CAACE,KAAK,CAACC,MAAM,CAACC,KAAK,CAAC;EACnC,CAAC;EAED,MAAMC,YAAY,GAAG,MAAOH,KAAK,IAAK;IAClCA,KAAK,CAACI,cAAc,CAAC,CAAC;IACtB,IAAI;MACA,MAAMC,QAAQ,GAAG,MAAMf,KAAK,CAACgB,IAAI,CAAC,oCAAoC,EAAE;QACpEC,UAAU,EAAEb,SAAS;QACrBG;MACJ,CAAC,CAAC;MACFF,UAAU,CAAC,MAAM,EAAEE,QAAQ,CAAC;MAC5BF,UAAU,CAAC,WAAW,EAAEU,QAAQ,CAACG,IAAI,CAACC,MAAM,CAAC;IACjD,CAAC,CAAC,OAAOC,KAAK,EAAE;MACZC,OAAO,CAACD,KAAK,CAAC,wBAAwB,EAAEA,KAAK,CAAC;MAC9CE,KAAK,CAAC,wBAAwB,CAAC;IACnC;IACAd,WAAW,CAAC,EAAE,CAAC,CAAC,CAAE;EACtB,CAAC;EAED,oBACIN,OAAA;IAAMqB,QAAQ,EAAEV,YAAa;IAACW,SAAS,EAAC,YAAY;IAAAC,QAAA,gBAChDvB,OAAA;MAAOwB,IAAI,EAAC,MAAM;MAACd,KAAK,EAAEL,QAAS;MAACoB,QAAQ,EAAElB,oBAAqB;MAACmB,WAAW,EAAC;IAAgB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eACnG9B,OAAA;MAAQwB,IAAI,EAAC,QAAQ;MAAAD,QAAA,EAAC;IAAI;MAAAI,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACjC,CAAC;AAEf;AAAC1B,EAAA,CA7BQH,aAAa;AAAA8B,EAAA,GAAb9B,aAAa;AA+BtB,eAAeA,aAAa;AAAC,IAAA8B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}