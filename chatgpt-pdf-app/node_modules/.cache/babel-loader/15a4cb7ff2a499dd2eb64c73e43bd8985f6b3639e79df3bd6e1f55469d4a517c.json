{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Aniket\\\\Desktop\\\\MS\\\\NCSU\\\\Subjects\\\\Infinitus\\\\chatgpt-pdf-app\\\\src\\\\components\\\\QuestionAsker.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport { Button, TextField } from '@mui/material';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction QuestionAsker({\n  sessionId\n}) {\n  _s();\n  const [question, setQuestion] = useState('');\n  const [answer, setAnswer] = useState('');\n  const handleQuestionChange = event => {\n    setQuestion(event.target.value);\n  };\n  const handleSubmit = async event => {\n    event.preventDefault();\n    try {\n      const response = await axios.post('http://localhost:5000/ask_question', {\n        session_id: sessionId,\n        question\n      });\n      setAnswer(response.data.answer);\n    } catch (error) {\n      console.error('Error asking question:', error);\n      alert('Failed to ask question');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      padding: 20\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      style: {\n        display: 'flex',\n        flexDirection: 'column'\n      },\n      children: [/*#__PURE__*/_jsxDEV(TextField, {\n        label: \"Ask a question\",\n        variant: \"outlined\",\n        value: question,\n        onChange: handleQuestionChange,\n        fullWidth: true,\n        margin: \"normal\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        type: \"submit\",\n        variant: \"contained\",\n        color: \"primary\",\n        style: {\n          marginTop: 10\n        },\n        children: \"Ask\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        marginTop: 20\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n        children: \"Answer:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: answer\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 9\n  }, this);\n}\n_s(QuestionAsker, \"z//ctU94R2UzDKliEZDQnqFHB00=\");\n_c = QuestionAsker;\nexport default QuestionAsker;\nvar _c;\n$RefreshReg$(_c, \"QuestionAsker\");","map":{"version":3,"names":["React","useState","axios","Button","TextField","jsxDEV","_jsxDEV","QuestionAsker","sessionId","_s","question","setQuestion","answer","setAnswer","handleQuestionChange","event","target","value","handleSubmit","preventDefault","response","post","session_id","data","error","console","alert","style","padding","children","onSubmit","display","flexDirection","label","variant","onChange","fullWidth","margin","fileName","_jsxFileName","lineNumber","columnNumber","type","color","marginTop","_c","$RefreshReg$"],"sources":["C:/Users/Aniket/Desktop/MS/NCSU/Subjects/Infinitus/chatgpt-pdf-app/src/components/QuestionAsker.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport axios from 'axios';\r\nimport { Button, TextField } from '@mui/material';\r\n\r\nfunction QuestionAsker({ sessionId }) {\r\n    const [question, setQuestion] = useState('');\r\n    const [answer, setAnswer] = useState('');\r\n\r\n    const handleQuestionChange = (event) => {\r\n        setQuestion(event.target.value);\r\n    };\r\n\r\n    const handleSubmit = async (event) => {\r\n        event.preventDefault();\r\n        try {\r\n            const response = await axios.post('http://localhost:5000/ask_question', {\r\n                session_id: sessionId,\r\n                question,\r\n            });\r\n            setAnswer(response.data.answer);\r\n        } catch (error) {\r\n            console.error('Error asking question:', error);\r\n            alert('Failed to ask question');\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div style={{ padding: 20 }}>\r\n            <form onSubmit={handleSubmit} style={{ display: 'flex', flexDirection: 'column' }}>\r\n                <TextField\r\n                    label=\"Ask a question\"\r\n                    variant=\"outlined\"\r\n                    value={question}\r\n                    onChange={handleQuestionChange}\r\n                    fullWidth\r\n                    margin=\"normal\"\r\n                />\r\n                <Button type=\"submit\" variant=\"contained\" color=\"primary\" style={{ marginTop: 10 }}>\r\n                    Ask\r\n                </Button>\r\n            </form>\r\n            <div style={{ marginTop: 20 }}>\r\n                <strong>Answer:</strong>\r\n                <p>{answer}</p>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default QuestionAsker;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,KAAK,MAAM,OAAO;AACzB,SAASC,MAAM,EAAEC,SAAS,QAAQ,eAAe;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAElD,SAASC,aAAaA,CAAC;EAAEC;AAAU,CAAC,EAAE;EAAAC,EAAA;EAClC,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACW,MAAM,EAAEC,SAAS,CAAC,GAAGZ,QAAQ,CAAC,EAAE,CAAC;EAExC,MAAMa,oBAAoB,GAAIC,KAAK,IAAK;IACpCJ,WAAW,CAACI,KAAK,CAACC,MAAM,CAACC,KAAK,CAAC;EACnC,CAAC;EAED,MAAMC,YAAY,GAAG,MAAOH,KAAK,IAAK;IAClCA,KAAK,CAACI,cAAc,CAAC,CAAC;IACtB,IAAI;MACA,MAAMC,QAAQ,GAAG,MAAMlB,KAAK,CAACmB,IAAI,CAAC,oCAAoC,EAAE;QACpEC,UAAU,EAAEd,SAAS;QACrBE;MACJ,CAAC,CAAC;MACFG,SAAS,CAACO,QAAQ,CAACG,IAAI,CAACX,MAAM,CAAC;IACnC,CAAC,CAAC,OAAOY,KAAK,EAAE;MACZC,OAAO,CAACD,KAAK,CAAC,wBAAwB,EAAEA,KAAK,CAAC;MAC9CE,KAAK,CAAC,wBAAwB,CAAC;IACnC;EACJ,CAAC;EAED,oBACIpB,OAAA;IAAKqB,KAAK,EAAE;MAAEC,OAAO,EAAE;IAAG,CAAE;IAAAC,QAAA,gBACxBvB,OAAA;MAAMwB,QAAQ,EAAEZ,YAAa;MAACS,KAAK,EAAE;QAAEI,OAAO,EAAE,MAAM;QAAEC,aAAa,EAAE;MAAS,CAAE;MAAAH,QAAA,gBAC9EvB,OAAA,CAACF,SAAS;QACN6B,KAAK,EAAC,gBAAgB;QACtBC,OAAO,EAAC,UAAU;QAClBjB,KAAK,EAAEP,QAAS;QAChByB,QAAQ,EAAErB,oBAAqB;QAC/BsB,SAAS;QACTC,MAAM,EAAC;MAAQ;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAClB,CAAC,eACFnC,OAAA,CAACH,MAAM;QAACuC,IAAI,EAAC,QAAQ;QAACR,OAAO,EAAC,WAAW;QAACS,KAAK,EAAC,SAAS;QAAChB,KAAK,EAAE;UAAEiB,SAAS,EAAE;QAAG,CAAE;QAAAf,QAAA,EAAC;MAEpF;QAAAS,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACP,CAAC,eACPnC,OAAA;MAAKqB,KAAK,EAAE;QAAEiB,SAAS,EAAE;MAAG,CAAE;MAAAf,QAAA,gBAC1BvB,OAAA;QAAAuB,QAAA,EAAQ;MAAO;QAAAS,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,eACxBnC,OAAA;QAAAuB,QAAA,EAAIjB;MAAM;QAAA0B,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACd,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACL,CAAC;AAEd;AAAChC,EAAA,CA3CQF,aAAa;AAAAsC,EAAA,GAAbtC,aAAa;AA6CtB,eAAeA,aAAa;AAAC,IAAAsC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}