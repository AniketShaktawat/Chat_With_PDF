{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Aniket\\\\Desktop\\\\MS\\\\NCSU\\\\Subjects\\\\Infinitus\\\\chatgpt-pdf-app\\\\src\\\\components\\\\PdfUploader.js\",\n  _s = $RefreshSig$();\n// src/components/PdfUploader.js\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport { CircularProgress } from '@mui/material';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction PdfUploader({\n  setSessionId,\n  onUploadSuccess,\n  isUploading\n}) {\n  _s();\n  const [file, setFile] = useState(null);\n  const handleFileChange = event => {\n    setFile(event.target.files[0]);\n  };\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleSubmit,\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"file\",\n      onChange: handleFileChange,\n      accept: \".pdf\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"submit\",\n      disabled: isUploading,\n      children: [isUploading ? 'Uploading...' : 'Upload PDF', isUploading && /*#__PURE__*/_jsxDEV(CircularProgress, {\n        size: 24\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 29\n      }, this), \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 16,\n    columnNumber: 9\n  }, this);\n}\n_s(PdfUploader, \"Nkb8eHkBruGouXteoqeZ1R6wRVk=\");\n_c = PdfUploader;\nexport default PdfUploader;\nvar _c;\n$RefreshReg$(_c, \"PdfUploader\");","map":{"version":3,"names":["React","useState","axios","CircularProgress","jsxDEV","_jsxDEV","PdfUploader","setSessionId","onUploadSuccess","isUploading","_s","file","setFile","handleFileChange","event","target","files","onSubmit","handleSubmit","children","type","onChange","accept","fileName","_jsxFileName","lineNumber","columnNumber","disabled","size","_c","$RefreshReg$"],"sources":["C:/Users/Aniket/Desktop/MS/NCSU/Subjects/Infinitus/chatgpt-pdf-app/src/components/PdfUploader.js"],"sourcesContent":["// src/components/PdfUploader.js\r\nimport React, { useState } from 'react';\r\nimport axios from 'axios';\r\nimport { CircularProgress } from '@mui/material';\r\n\r\n\r\nfunction PdfUploader({ setSessionId, onUploadSuccess, isUploading }) {\r\n    const [file, setFile] = useState(null);\r\n\r\n    const handleFileChange = (event) => {\r\n        setFile(event.target.files[0]);\r\n    };\r\n\r\n\r\n    return (\r\n        <form onSubmit={handleSubmit}>\r\n        <input type=\"file\" onChange={handleFileChange} accept=\".pdf\" />\r\n        <button type=\"submit\" disabled={isUploading}>\r\n            {isUploading ? 'Uploading...' : 'Upload PDF'}\r\n            {isUploading && <CircularProgress size={24} />} {/* Loader icon */}\r\n        </button>\r\n    </form>\r\n    );\r\n}\r\n\r\nexport default PdfUploader;\r\n"],"mappings":";;AAAA;AACA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,KAAK,MAAM,OAAO;AACzB,SAASC,gBAAgB,QAAQ,eAAe;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAGjD,SAASC,WAAWA,CAAC;EAAEC,YAAY;EAAEC,eAAe;EAAEC;AAAY,CAAC,EAAE;EAAAC,EAAA;EACjE,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGX,QAAQ,CAAC,IAAI,CAAC;EAEtC,MAAMY,gBAAgB,GAAIC,KAAK,IAAK;IAChCF,OAAO,CAACE,KAAK,CAACC,MAAM,CAACC,KAAK,CAAC,CAAC,CAAC,CAAC;EAClC,CAAC;EAGD,oBACIX,OAAA;IAAMY,QAAQ,EAAEC,YAAa;IAAAC,QAAA,gBAC7Bd,OAAA;MAAOe,IAAI,EAAC,MAAM;MAACC,QAAQ,EAAER,gBAAiB;MAACS,MAAM,EAAC;IAAM;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eAC/DrB,OAAA;MAAQe,IAAI,EAAC,QAAQ;MAACO,QAAQ,EAAElB,WAAY;MAAAU,QAAA,GACvCV,WAAW,GAAG,cAAc,GAAG,YAAY,EAC3CA,WAAW,iBAAIJ,OAAA,CAACF,gBAAgB;QAACyB,IAAI,EAAE;MAAG;QAAAL,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,EAAC,GAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC5C,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACP,CAAC;AAEX;AAAChB,EAAA,CAjBQJ,WAAW;AAAAuB,EAAA,GAAXvB,WAAW;AAmBpB,eAAeA,WAAW;AAAC,IAAAuB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}