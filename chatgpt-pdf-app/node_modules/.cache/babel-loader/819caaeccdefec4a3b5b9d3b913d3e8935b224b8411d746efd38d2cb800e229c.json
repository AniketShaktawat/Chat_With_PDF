{"ast":null,"code":"import { encodeToWaw } from './wav';\nimport { encodeToMp3 } from './mp3';\nimport { createFileFromBlobs, getExtensionFromMimeType } from '../../ReactFileUtilities';\nexport var transcode = function (_a) {\n  var blob = _a.blob,\n    sampleRate = _a.sampleRate,\n    targetMimeType = _a.targetMimeType;\n  var file = createFileFromBlobs({\n    blobsArray: [blob],\n    fileName: \"audio_recording_\".concat(new Date().toISOString(), \".\").concat(getExtensionFromMimeType(blob.type)),\n    mimeType: blob.type\n  });\n  if (targetMimeType.match('audio/wav')) {\n    return encodeToWaw(file, sampleRate);\n  }\n  if (targetMimeType.match('audio/mp3')) {\n    return encodeToMp3(file, sampleRate);\n  }\n  return Promise.resolve(blob);\n};","map":{"version":3,"names":["encodeToWaw","encodeToMp3","createFileFromBlobs","getExtensionFromMimeType","transcode","_a","blob","sampleRate","targetMimeType","file","blobsArray","fileName","concat","Date","toISOString","type","mimeType","match","Promise","resolve"],"sources":["C:/Users/Aniket/Desktop/MS/NCSU/Subjects/Infinitus/chatgpt-pdf-app/node_modules/stream-chat-react/dist/components/MediaRecorder/transcode/index.js"],"sourcesContent":["import { encodeToWaw } from './wav';\nimport { encodeToMp3 } from './mp3';\nimport { createFileFromBlobs, getExtensionFromMimeType } from '../../ReactFileUtilities';\nexport var transcode = function (_a) {\n    var blob = _a.blob, sampleRate = _a.sampleRate, targetMimeType = _a.targetMimeType;\n    var file = createFileFromBlobs({\n        blobsArray: [blob],\n        fileName: \"audio_recording_\".concat(new Date().toISOString(), \".\").concat(getExtensionFromMimeType(blob.type)),\n        mimeType: blob.type,\n    });\n    if (targetMimeType.match('audio/wav')) {\n        return encodeToWaw(file, sampleRate);\n    }\n    if (targetMimeType.match('audio/mp3')) {\n        return encodeToMp3(file, sampleRate);\n    }\n    return Promise.resolve(blob);\n};\n"],"mappings":"AAAA,SAASA,WAAW,QAAQ,OAAO;AACnC,SAASC,WAAW,QAAQ,OAAO;AACnC,SAASC,mBAAmB,EAAEC,wBAAwB,QAAQ,0BAA0B;AACxF,OAAO,IAAIC,SAAS,GAAG,SAAAA,CAAUC,EAAE,EAAE;EACjC,IAAIC,IAAI,GAAGD,EAAE,CAACC,IAAI;IAAEC,UAAU,GAAGF,EAAE,CAACE,UAAU;IAAEC,cAAc,GAAGH,EAAE,CAACG,cAAc;EAClF,IAAIC,IAAI,GAAGP,mBAAmB,CAAC;IAC3BQ,UAAU,EAAE,CAACJ,IAAI,CAAC;IAClBK,QAAQ,EAAE,kBAAkB,CAACC,MAAM,CAAC,IAAIC,IAAI,CAAC,CAAC,CAACC,WAAW,CAAC,CAAC,EAAE,GAAG,CAAC,CAACF,MAAM,CAACT,wBAAwB,CAACG,IAAI,CAACS,IAAI,CAAC,CAAC;IAC9GC,QAAQ,EAAEV,IAAI,CAACS;EACnB,CAAC,CAAC;EACF,IAAIP,cAAc,CAACS,KAAK,CAAC,WAAW,CAAC,EAAE;IACnC,OAAOjB,WAAW,CAACS,IAAI,EAAEF,UAAU,CAAC;EACxC;EACA,IAAIC,cAAc,CAACS,KAAK,CAAC,WAAW,CAAC,EAAE;IACnC,OAAOhB,WAAW,CAACQ,IAAI,EAAEF,UAAU,CAAC;EACxC;EACA,OAAOW,OAAO,CAACC,OAAO,CAACb,IAAI,CAAC;AAChC,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}