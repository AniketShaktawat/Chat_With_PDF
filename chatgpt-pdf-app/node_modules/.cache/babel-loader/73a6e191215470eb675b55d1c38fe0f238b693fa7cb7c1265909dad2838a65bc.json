{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Aniket\\\\Desktop\\\\MS\\\\NCSU\\\\Subjects\\\\Infinitus\\\\chatgpt-pdf-app\\\\src\\\\components\\\\PdfUploader.js\",\n  _s = $RefreshSig$();\n// src/components/PdfUploader.js\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction PdfUploader({\n  setSessionId,\n  onUploadSuccess\n}) {\n  _s();\n  const [file, setFile] = useState(null);\n  const handleFileChange = event => {\n    setFile(event.target.files[0]);\n  };\n  const handleSubmit = async event => {\n    event.preventDefault();\n    if (file) {\n      const formData = new FormData();\n      formData.append('file', file);\n      try {\n        const response = await axios.post('http://localhost:5000/upload_pdf', formData, {\n          headers: {\n            'Content-Type': 'multipart/form-data'\n          }\n        });\n        setSessionId(response.data.session_id);\n        onUploadSuccess(file);\n        // onPdfUpload(file); // Pass the file to the onPdfUpload function\n      } catch (error) {\n        console.error('Error uploading PDF:', error);\n        alert('Failed to upload PDF');\n      }\n    } else {\n      alert('Please select a PDF file to upload.');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleSubmit,\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"file\",\n      onChange: handleFileChange,\n      accept: \".pdf\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"submit\",\n      children: \"Upload PDF\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 9\n  }, this);\n}\n_s(PdfUploader, \"Nkb8eHkBruGouXteoqeZ1R6wRVk=\");\n_c = PdfUploader;\nexport default PdfUploader;\nvar _c;\n$RefreshReg$(_c, \"PdfUploader\");","map":{"version":3,"names":["React","useState","axios","jsxDEV","_jsxDEV","PdfUploader","setSessionId","onUploadSuccess","_s","file","setFile","handleFileChange","event","target","files","handleSubmit","preventDefault","formData","FormData","append","response","post","headers","data","session_id","error","console","alert","onSubmit","children","type","onChange","accept","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/Aniket/Desktop/MS/NCSU/Subjects/Infinitus/chatgpt-pdf-app/src/components/PdfUploader.js"],"sourcesContent":["// src/components/PdfUploader.js\r\nimport React, { useState } from 'react';\r\nimport axios from 'axios';\r\n\r\nfunction PdfUploader({ setSessionId, onUploadSuccess }) {\r\n    const [file, setFile] = useState(null);\r\n\r\n    const handleFileChange = (event) => {\r\n        setFile(event.target.files[0]);\r\n    };\r\n\r\nconst handleSubmit = async (event) => {\r\n        event.preventDefault();\r\n        if (file) {\r\n            const formData = new FormData();\r\n            formData.append('file', file);\r\n            try {\r\n                const response = await axios.post('http://localhost:5000/upload_pdf', formData, {\r\n                    headers: {\r\n                        'Content-Type': 'multipart/form-data',\r\n                    },\r\n                });\r\n                setSessionId(response.data.session_id);\r\n                onUploadSuccess(file);\r\n                // onPdfUpload(file); // Pass the file to the onPdfUpload function\r\n            } catch (error) {\r\n                console.error('Error uploading PDF:', error);\r\n                alert('Failed to upload PDF');\r\n            }\r\n        } else {\r\n            alert('Please select a PDF file to upload.');\r\n        }\r\n    };\r\n\r\n    return (\r\n        <form onSubmit={handleSubmit}>\r\n            <input type=\"file\" onChange={handleFileChange} accept=\".pdf\" />\r\n            <button type=\"submit\">Upload PDF</button>\r\n        </form>\r\n    );\r\n}\r\n\r\nexport default PdfUploader;\r\n"],"mappings":";;AAAA;AACA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,SAASC,WAAWA,CAAC;EAAEC,YAAY;EAAEC;AAAgB,CAAC,EAAE;EAAAC,EAAA;EACpD,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGT,QAAQ,CAAC,IAAI,CAAC;EAEtC,MAAMU,gBAAgB,GAAIC,KAAK,IAAK;IAChCF,OAAO,CAACE,KAAK,CAACC,MAAM,CAACC,KAAK,CAAC,CAAC,CAAC,CAAC;EAClC,CAAC;EAEL,MAAMC,YAAY,GAAG,MAAOH,KAAK,IAAK;IAC9BA,KAAK,CAACI,cAAc,CAAC,CAAC;IACtB,IAAIP,IAAI,EAAE;MACN,MAAMQ,QAAQ,GAAG,IAAIC,QAAQ,CAAC,CAAC;MAC/BD,QAAQ,CAACE,MAAM,CAAC,MAAM,EAAEV,IAAI,CAAC;MAC7B,IAAI;QACA,MAAMW,QAAQ,GAAG,MAAMlB,KAAK,CAACmB,IAAI,CAAC,kCAAkC,EAAEJ,QAAQ,EAAE;UAC5EK,OAAO,EAAE;YACL,cAAc,EAAE;UACpB;QACJ,CAAC,CAAC;QACFhB,YAAY,CAACc,QAAQ,CAACG,IAAI,CAACC,UAAU,CAAC;QACtCjB,eAAe,CAACE,IAAI,CAAC;QACrB;MACJ,CAAC,CAAC,OAAOgB,KAAK,EAAE;QACZC,OAAO,CAACD,KAAK,CAAC,sBAAsB,EAAEA,KAAK,CAAC;QAC5CE,KAAK,CAAC,sBAAsB,CAAC;MACjC;IACJ,CAAC,MAAM;MACHA,KAAK,CAAC,qCAAqC,CAAC;IAChD;EACJ,CAAC;EAED,oBACIvB,OAAA;IAAMwB,QAAQ,EAAEb,YAAa;IAAAc,QAAA,gBACzBzB,OAAA;MAAO0B,IAAI,EAAC,MAAM;MAACC,QAAQ,EAAEpB,gBAAiB;MAACqB,MAAM,EAAC;IAAM;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eAC/DhC,OAAA;MAAQ0B,IAAI,EAAC,QAAQ;MAAAD,QAAA,EAAC;IAAU;MAAAI,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACvC,CAAC;AAEf;AAAC5B,EAAA,CApCQH,WAAW;AAAAgC,EAAA,GAAXhC,WAAW;AAsCpB,eAAeA,WAAW;AAAC,IAAAgC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}